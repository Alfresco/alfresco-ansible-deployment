---
- name: Default cleanup
  import_playbook: ../default/cleanup-uninstall.yml

- name: Multimachine cleanup
  hosts: localhost
  gather_facts: false
  vars:
    project_dir: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}"
  tasks:
    - name: Destroy Shared contentstore
      community.aws.efs:
        state: absent
        name: molecule-{{ lookup('ansible.builtin.env', 'BUILD_NUMBER') }}
      when: molecule_yml.platforms | selectattr('name', 'in', groups.repository) | length > 1
      register: contentstore

    - name: Reset repo host_vars files
      blockinfile:
        state: absent
        block: |
          cs_storage:
            type: nfs
            device: {{ item | map('extract', hostvars, ['cs_storage','device']) }}
            options: _netdev,noatime,nodiratime,tcp,soft,intr
        path: host_vars/{{ item }}.yml
      loop: "{{ molecule_yml.platforms | selectattr('name', 'in', groups.repository) | map(attribute='name') }}"

- name: Cleanup external activemq
  hosts: localhost
  gather_facts: false
  vars:
    broker_name: molecule-{{ lookup('ansible.builtin.env', 'BRANCH_NAME')[:20] }}-{{ lookup('ansible.builtin.env', 'BUILD_NUMBER') }}
  tasks:

    - name: Grab activemq broker id
      ansible.builtin.shell: |
        aws mq describe-broker --broker-id {{ broker_name }} || true
      register: describe_broker_output

    - name: Set broker-id
      set_fact:
        broker_id: "{{ (describe_broker_output.stdout | from_json).BrokerId }}"
      when: describe_broker_output.stdout | length > 0

    - name: Request mq broker destroy
      ansible.builtin.command: |
        aws mq delete-broker --broker-id {{ broker_id }}
      when: broker_id is defined

    - name: Wait for destroy mq broker
      ansible.builtin.shell: |
        aws mq describe-broker --broker-id {{ broker_id }} || true
      when: broker_id is defined
      register: wait_describe_broker_output
      until: wait_describe_broker_output.stderr.find("NotFoundException") != -1
      retries: 20
      delay: 30
