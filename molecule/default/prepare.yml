---
- name: Prepare remote hosts
  hosts: all
  gather_facts: false
  tasks:
    - name: Make sure python3 is installed
      package:
        name: python3
        state: present
      become: true

- name: Prepare localhost
  hosts: localhost
  gather_facts: false
  vars:
    project_dir: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}"
    dtas_dir: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}/dtas"
    dtas_version: "{{ lookup('ansible.builtin.env', 'DTAS_VERSION') }}"
    clone_github_token: "{{ lookup('ansible.builtin.env', 'CLONE_GITHUB_TOKEN') }}"
  tasks:
    - name: Detect ec2 hostname
      ansible.builtin.include_tasks: "tasks/detect_ec2_node_hostname.yml"

    - name: Set hostname as known_urls
      ansible.builtin.blockinfile:
        marker: >-
          # {mark} KNOWN_URLS VAR
        block: |
          known_urls:
            - https://{{ node_hostname }}/share/
        path: ../{{ lookup('env', 'MOLECULE_SCENARIO_NAME') }}/host_vars/{{ item }}.yml
      loop: "{{ groups.repository }}"

    - name: "Set variables"
      ansible.builtin.set_fact:
        certificate_domain: "{{ node_hostname }}"
        private_key_path: "{{ project_dir }}/configuration_files/ssl_certificates/{{ node_hostname }}.key"
        cert_path: "{{ project_dir }}/configuration_files/ssl_certificates/{{ node_hostname }}.crt"

    - name: Create private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey:
        path: "{{ private_key_path }}"

    - name: "Create CSR self-signed certificate for {{ certificate_domain }}"
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ private_key_path }}"
        common_name: "{{ certificate_domain }}"
        organization_name: Hyland
      register: csr

    - name: Create self-signed certificate from CSR
      community.crypto.x509_certificate:
        path: "{{ cert_path }}"
        csr_content: "{{ csr.csr }}"
        privatekey_path: "{{ private_key_path }}"
        provider: selfsigned

    - name: Configure FQDN in extra vars file
      ansible.builtin.replace:
        path: "{{ project_dir }}/tests/test-ssl.yml"
        regexp: "TEST_FQDN"
        replace: "{{ certificate_domain }}"

    - name: Clone DTAS when clone_github_token is available
      when: clone_github_token is defined and clone_github_token.startswith('ghp_')
      ansible.builtin.git:
        repo: "https://{{ clone_github_token }}@github.com/Alfresco/alfresco-deployment-test-automation-scripts.git"
        dest: "{{ dtas_dir }}"
        version: "{{ dtas_version }}"
