---
- name: Verify
  hosts: localhost
  gather_facts: false
  vars:
    project_dir: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}"
    dtas_dir: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}/dtas"
    test_config_file: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}/{{ lookup('ansible.builtin.env', 'MOLECULE_IT_TEST_CONFIG') | default('tests/test-config.json', True) }}"
  tasks:
    - name: Detect ec2 hostname
      ansible.builtin.include_tasks: "tasks/detect_ec2_node_hostname.yml"

    - name: Install pytest requirements
      pip:
        chdir: "{{ dtas_dir }}"
        requirements: requirements.txt

    - name: Configure {{ node_hostname }} as target host for tests in {{ test_config_file }}
      ansible.builtin.replace:
        path: "{{ test_config_file }}"
        regexp: 'TEST_URL'
        replace: "https://{{ node_hostname }}"

    - name: Run tests
      block:
        - name: Run pytest
          delegate_to: localhost
          vars:
              selfsigned_cert_path: "{{ project_dir }}/configuration_files/ssl_certificates/{{ node_hostname }}.crt"
          ansible.builtin.shell:
            chdir: "{{ dtas_dir }}"
            cmd: |
              export REQUESTS_CA_BUNDLE={{ selfsigned_cert_path }}
              pytest --tb=line --color=no --configuration {{ test_config_file }} tests/ -s
      rescue:
        - name: Print multiline pytest stdout as best as we can
          debug:
            msg: "{{ ansible_failed_result.stdout_lines }}"
        - name: Explicit failure after printing failure debug
          fail: msg="Aborting due to pytest failure"
