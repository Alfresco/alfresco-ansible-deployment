---
- name: Verify
  hosts: localhost
  gather_facts: false
  vars:
    project_dir: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}"
    dtas_dir: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}/dtas"
    test_config_file: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}/{{ lookup('ansible.builtin.env', 'MOLECULE_IT_TEST_CONFIG') | default('tests/test-config.json', True) }}"
  tasks:
    # https://www.jeffgeerling.com/blog/2017/quick-way-check-if-youre-aws-ansible-playbook
    - name: Check if AWS metadata is reachable
      delegate_to: "{{ groups['nginx'][0] }}"
      ansible.builtin.uri:
        url: http://169.254.169.254/latest/meta-data
        timeout: 2
      register: aws_uri_check
      failed_when: False

    - name: Set variable for AWS instance detection
      delegate_to: "{{ groups['nginx'][0] }}"
      ansible.builtin.set_fact:
        is_aws_environment: "{{ aws_uri_check.status == 200 }}"

    - name: Gather EC2 facts
      delegate_to: "{{ groups['nginx'][0] }}"
      when: is_aws_environment
      amazon.aws.ec2_metadata_facts:

    - name: Set hostname fact from EC2 or localhost if detection failed
      ansible.builtin.set_fact:
        node_hostname: "{{ ansible_ec2_public_hostname | default('localhost') }}"

    - name: Install pytest requirements
      pip:
        chdir: "{{ dtas_dir }}"
        requirements: requirements.txt

    - name: Configure {{ node_hostname }} as target host for tests in {{ test_config_file }}
      ansible.builtin.replace:
        path: "{{ test_config_file }}"
        regexp: 'TEST_URL'
        replace: "https://{{ node_hostname }}"

    - name: Run tests
      block:
        - name: Run pytest
          delegate_to: localhost
          vars:
              selfsigned_cert_path: "{{ project_dir }}/configuration_files/ssl_certificates/{{ node_hostname }}.crt"
          ansible.builtin.shell:
            chdir: "{{ dtas_dir }}"
            cmd: |
              export REQUESTS_CA_BUNDLE={{ selfsigned_cert_path }}
              pytest --tb=line --configuration {{ test_config_file }} tests/ -s
      rescue:
        - name: Print multiline pytest stdout as best as we can
          debug:
            msg: "{{ ansible_failed_result.stdout_lines }}"
        - name: Explicit failure after printing failure debug
          fail: msg="Aborting due to pytest failure"
