---
- name: Verify PKI generation
  hosts: all
  gather_facts: false
  tasks:
    - name: Load secrets
      include_vars: ../../vars/secrets.yml
      delegate_to: localhost
      delegate_facts: true

    - name: Check Generated p12 valid
      community.crypto.openssl_pkcs12:
        action: parse
        src: ../../configuration_files/pki/certificates/{{ inventory_hostname }}.p12
        path: /tmp/{{ inventory_hostname }}.crt
        passphrase: "{{ hostvars.localhost.certs_p12_passphrase }}"
        state: present
        return_content: true
      delegate_to: localhost
      register: p12

    - name: Check basic expected assets
      ansible.builtin.assert:
        that:
          - "'BEGIN RSA PRIVATE KEY' in p12.pkcs12 | b64decode"
          - "'BEGIN CERTIFICATE' in p12.pkcs12 | b64decode"

- name: Verify ACS target
  hosts: repository
  gather_facts: true
  tasks:
    - name: Populate services facts
      ansible.builtin.service_facts:

    - name: Check services up
      ansible.builtin.assert:
        that:
          - ansible_facts.services['alfresco-content.service'].state == "running"

- name: Verify ATS target
  hosts: transformers
  gather_facts: true
  tasks:
    - name: Populate services facts
      ansible.builtin.service_facts:

    - name: Check in logs a client did connect
      when: item.edition == acs.edition
      ansible.builtin.slurp:
        src: /var/log/alfresco/{{ item.file }}.log
      register: ats_log
      become: true
      until:
        - item.pattern in ats_log.content | b64decode
      retries: 10
      delay: 3
      loop:
        - file: ats-ate-aio
          pattern: GET Transform Config version
          edition: Community
        - file: ats-atr
          pattern: GET Transform Config version
          edition: Enterprise
        - file: ats-shared-fs
          pattern: TLS virtual host
          edition: Enterprise

    - name: Copy cert as PEM
      ansible.builtin.copy:
        src: /tmp/{{ inventory_hostname }}.crt
        dest: /tmp
    - name: Check certificates requires auth
      ansible.builtin.uri:
        url: https://localhost:8090
        client_cert: "{{ item.client_crt | default(omit) }}"
        validate_certs: "{{ item.check_cert | default(omit) }}"
      register: response
      ignore_errors: true
      loop:
        - check_cert: true
        - check_cert: false
          client_crt: /tmp/{{ inventory_hostname }}.crt

    - name: Check Assertions
      ansible.builtin.assert:
        that:
          - ansible_facts.services['alfresco-tengine-aio.service'].state == "running"
          - "'SSL: CERTIFICATE_VERIFY_FAILED' in response.results[0].msg"
          - response.results[1].status == 200

    - name: Check Assertions (Enterprise)
      ansible.builtin.assert:
        that:
          - ansible_facts.services['alfresco-shared-fs.service'].state == "running"
          - ansible_facts.services['alfresco-transform-router.service'].state == "running"
      when: acs.edition == 'Enterprise'
