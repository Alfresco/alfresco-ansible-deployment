---
- name: Check for a target host certificate
  ansible.builtin.copy:
    src: "{{ certificate_container }}"
    mode: 0400
    dest: "{{ download_location }}"
  register: certcp
  failed_when: certcp.failed and 'Could not find or access' not in certcp.msg

- name: Add certificates in a java keystore
  when: certcp.msg is undefined
  no_log: false
  block:
    - name: Export certificate chain
      shell:
        chdir: "{{ download_location }}"
        cmd: >
          openssl pkcs12
          -in "{{ certificate_container | basename }}"
          -cacerts
          -nokeys
          -passin pass:'{{ certificate_container_password }}'
          -out {{ inventory_hostname }}.pem
    - name: Get certificate container aliases
      register: cert_aliases
      shell:
        chdir: "{{ download_location }}"
        cmd: >
          {{ java_home }}/bin/keytool
          -list
          -rfc
          -storepass "{{ certificate_container_password }}"
          -keystore "{{ certificate_container | basename }}"
          2> {{ certcp.checksum }} |
          awk '/^Alias name: /{ print substr($0,13) }'
    - name: Import certificates to a keystore
      environment:
        LANG: C
      community.general.java_cert:
        executable: "{{ java_home }}/bin/keytool"
        pkcs12_alias: "{{ cert_aliases.stdout_lines | first }}"
        pkcs12_path: >-
          {{ download_location }}/{{ certificate_container | basename }}
        pkcs12_password: "{{ certificate_container_password }}"
        cert_alias: "{{ inventory_hostname }}"
        keystore_type: JCEKS
        keystore_path: "{{ java_keystore }}"
        keystore_pass: "{{ java_keystore_pass }}"
        state: present
        keystore_create: true
    - name: Trust certificates CA
      community.general.java_cert:
        executable: "{{ java_home }}/bin/keytool"
        cert_alias: Hyland - Alfresco deployment CA
        cert_path: >-
          {{ download_location }}/{{ inventory_hostname }}.pem
        keystore_path: "{{ java_truststore }}"
        keystore_pass: "{{ java_truststore_pass }}"
        state: present
        trust_cacert: true
  rescue:
    - name: Clean keystore tmp file as something went wrong
      file:
        path: "{{ download_location }}/{{ certcp.checksum }}"
        state: absent
    - name: Force fail on certificate import failure
      fail:
        msg: |
          Playbook stops here as it was not able to complete certificate
          import. The Java keystore is not up to date or does not exist.
