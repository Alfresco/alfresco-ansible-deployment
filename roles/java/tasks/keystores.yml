---
- name: Add certificates in a java keystore
  no_log: true
  when:
    - certificate_container is defined
    - certificate_container_password is defined
  block:
    - name: Copy host certificate
      no_log: false
      ansible.builtin.copy:
        src: "{{ certificate_container }}"
        mode: 0400
        dest: "{{ download_location }}"
      register: certcp
    - name: Export certificate chain
      ansible.builtin.shell:
        creates: "{{ certcp.checksum }}.pem"
        chdir: "{{ download_location }}"
        cmd: >
          openssl pkcs12
          -in "{{ certificate_container | basename }}"
          -cacerts
          -nokeys
          -out {{ certcp.checksum }}.pem
        stdin: "{{ certificate_container_password }}"
    - name: Get certificate container aliases
      register: cert_aliases
      changed_when: false
      ansible.builtin.shell:
        chdir: "{{ download_location }}"
        cmd: >
          {{ java_home }}/bin/keytool
          -list
          -rfc
          -keystore "{{ certificate_container | basename }}" |
          awk '/^Alias name: /{ print substr($0,13) }'
        stdin: "{{ certificate_container_password }}"
    - name: Import certificates to a keystore
      environment:
        LANG: C
      community.general.java_cert:
        executable: "{{ java_home }}/bin/keytool"
        pkcs12_alias: "{{ cert_aliases.stdout_lines | first }}"
        pkcs12_path: >-
          {{ download_location }}/{{ certificate_container | basename }}
        pkcs12_password: "{{ certificate_container_password }}"
        cert_alias: "{{ inventory_hostname }}"
        keystore_type: "{{ java_keystore.type }}"
        keystore_path: "{{ java_keystore.path }}"
        keystore_pass: "{{ java_keystore.pass }}"
        state: present
        keystore_create: true
    - name: Trust certificates CA
      community.general.java_cert:
        executable: "{{ java_home }}/bin/keytool"
        cert_alias: Hyland - Alfresco deployment CA
        cert_path: >-
          {{ download_location }}/{{ certcp.checksum }}.pem
        keystore_path: "{{ java_truststore }}"
        keystore_pass: "{{ java_truststore_pass }}"
        state: present
        trust_cacert: true

- name: Generate Java security keys
  no_log: false
  environment:
    LANG: C
  block:
    - name: Check if key exists
      changed_when: false
      loop: "{{ java_keystore.seckeys }}"
      register: keyXist
      failed_when: >-
        keyXist.failed and "does not exist" not in keyXist.stdout
      ansible.builtin.shell:
        cmd: >
          {{ java_home }}/bin/keytool
          -list
          -keystore {{ java_keystore.path }}
          -storetype {{ java_keystore.type }}
          -rfc
          -alias {{ item.name }}
        stdin: "{{ java_keystore.pass }}"
    - name: Generate security key
      changed_when: false
      loop: "{{ java_keystore.seckeys }}"
      loop_control:
        index_var: loop_idx
      when:
        - java_keystore is defined
        - "'does not exist' in keyXist.results[loop_idx].stdout"
      ansible.builtin.shell:
        cmd: >
          {{ java_home }}/bin/keytool
          -genseckey
          -keystore {{ java_keystore.path }}
          -storetype {{ java_keystore.type }}
          -storepass {{ java_keystore.pass | quote }}
          -keyalg {{ item.algorythm }}
          -keysize {{ item.length }}
          -keypass {{ item.pass | quote }}
          -alias {{ item.name }}
