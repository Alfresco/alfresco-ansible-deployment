---
- name: Check keystore password is at least 6 characters long
  no_log: true
  ansible.builtin.assert:
    that: java_keystore.pass | length > 6

- name: Install required packages for certificates import
  become: true
  vars:
    pycryto: >-
      {{ 'python2-cryptography' if ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7' else 'python3-cryptography' }}
  package:
    name: "{{ item }}"
    state: present
  loop:
    - openssl
    - "{{ pycryto }}"

- name: Add certificates in a java keystore
  no_log: true
  when:
    - "'cert_containers' in java_keystore.keys()"
  block:
    - name: Copy host certificate
      loop: "{{ java_keystore.cert_containers }}"
      ansible.builtin.copy:
        src: "{{ item.path }}"
        mode: "0400"
        dest: "{{ download_location }}"
      register: certcp
    - name: Export certificate chain
      loop: "{{ java_keystore.cert_containers }}"
      loop_control:
        index_var: loop_idx
      when: item.add_to_trusted_ca | default(False)
      ansible.builtin.shell:
        creates: "{{ certcp.results[loop_idx].checksum }}.pem"
        chdir: "{{ download_location }}"
        cmd: >
          openssl pkcs12
          -in "{{ item.path | basename }}"
          -cacerts
          -nokeys
          -out {{ certcp.results[loop_idx].checksum }}.pem
        stdin: "{{ item.pass }}"
    - name: Get certificate container aliases
      loop: "{{ java_keystore.cert_containers }}"
      loop_control:
        index_var: loop_idx
      register: cert_aliases
      changed_when: false
      environment:
        LANG: C
      ansible.builtin.shell:
        chdir: "{{ download_location }}"
        cmd: >
          {{ java_home }}/bin/keytool
          -list
          -rfc
          -keystore "{{ item.path | basename }}" |
          awk '/^Alias name: /{ print substr($0,13) }'
        stdin: "{{ item.pass }}"
    - name: Ensure keystore target directory exists
      become: true
      ansible.builtin.file:
        path: "{{ java_keystore.path | dirname }}"
        state: directory
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0700"
    - name: Import certificates to a keystore
      become: true
      loop: "{{ java_keystore.cert_containers }}"
      loop_control:
        index_var: loop_idx
      community.general.java_cert:
        executable: "{{ java_home }}/bin/keytool"
        pkcs12_alias: >-
          {{ cert_aliases.results[loop_idx].stdout_lines | first }}
        pkcs12_path: >-
          {{ download_location }}/{{ item.path | basename }}
        pkcs12_password: "{{ item.pass }}"
        cert_alias: "{{ inventory_hostname }}"
        keystore_type: "{{ java_keystore.type }}"
        keystore_path: "{{ java_keystore.path }}"
        keystore_pass: "{{ java_keystore.pass }}"
        state: present
        keystore_create: true
    - name: Set keystore permissions
      become: true
      file:
        path: "{{ java_keystore.path }}"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0600"
    - name: Trust certificates CA
      become: true
      loop: "{{ java_keystore.cert_containers }}"
      loop_control:
        index_var: loop_idx
      when: item.add_to_trusted_ca | default(False)
      community.general.java_cert:
        executable: "{{ java_home }}/bin/keytool"
        cert_alias: >-
          Alfresco Ansible imported CA ({{ certcp.results[loop_idx].checksum }})
        cert_path: >-
          {{ download_location }}/{{ certcp.results[loop_idx].checksum }}.pem
        keystore_path: "{{ java_truststore }}"
        keystore_pass: "{{ java_truststore_pass }}"
        state: present
        trust_cacert: true
        keystore_create: true

- name: Generate Java security keys
  no_log: true
  environment:
    LANG: C
  when:
    - "'seckeys' in java_keystore.keys()"
  block:
    - name: Check security keys passphrase is at least 6 characters long
      loop: "{{ java_keystore.seckeys }}"
      ansible.builtin.assert:
        that: item.pass | length > 6
        fail_msg: |
          The provided keytore password is too short!
          It should be more than 6 characters long.
    - name: Check if key exists
      changed_when: false
      loop: "{{ java_keystore.seckeys }}"
      register: key_exists
      failed_when: >-
        key_exists.failed and "does not exist" not in key_exists.stdout
      ansible.builtin.shell:
        cmd: >
          {{ java_home }}/bin/keytool
          -list
          -keystore {{ java_keystore.path }}
          -storetype {{ java_keystore.type }}
          -rfc
          -alias {{ item.name }}
        stdin: "{{ java_keystore.pass }}"
    - name: Generate security key
      become: true
      loop: "{{ java_keystore.seckeys }}"
      loop_control:
        index_var: loop_idx
      when:
        - java_keystore.seckeys
        - "'does not exist' in key_exists.results[loop_idx].stdout"
      ansible.builtin.shell:
        cmd: >
          {{ java_home }}/bin/keytool
          -genseckey
          -keystore {{ java_keystore.path }}
          -storetype {{ java_keystore.type }}
          -storepass {{ java_keystore.pass | quote }}
          -keyalg {{ item.algorythm | default('AES') }}
          -keysize {{ item.length | default(256) }}
          -keypass {{ item.pass | quote }}
          -alias {{ item.name }}
      tags:
        - molecule-idempotence-notest
