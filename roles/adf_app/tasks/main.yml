---
- name: Extended validation of role arguments
  ansible.builtin.assert:
    that:
      - adf_app_context.startswith('/')
      - adf_app_context.endswith('/')
      - adf_app_port | int >= 1024
      - adf_app_port | int < 65536
      - adf_app_src_archive is url
      - adf_app_src_checksum is url or adf_app_src_checksum is match("^[a-fA-F0-9]{40}$")

- name: Create "{{ nginx_default_vhost_docroot }}/{{ adf_app_name }}/" dir
  become: true
  ansible.builtin.file:
    path: "{{ nginx_default_vhost_docroot }}/{{ adf_app_name }}/"
    state: directory
    mode: "0755"

- name: Download the ADF application archive
  ansible.builtin.include_tasks:
    file: fetch.yml
    apply:
      notify:
        - Unpack {{ adf_app_name }}

- name: Set oauth2 redirects fact
  ansible.builtin.set_fact:
    adf_app_oauth_redirects:
      oauth2:
        redirectSilentIframeUri: "{protocol}//{hostname}{:port}{{ adf_app_context }}assets/silent-refresh.html"
        redirectUri: "{{ adf_app_context }}"
        redirectUriLogout: "{{ adf_app_context }}"

- name: Merge configuration
  ansible.builtin.set_fact:
    adf_app_merged_configuration: >-
      {{
        adf_app_default_configuration |
        ansible.builtin.combine(adf_app_oauth_redirects, recursive=true) |
        ansible.builtin.combine(adf_app_configuration, recursive=true)
      }}

- name: Dump current app configuration to disk
  ansible.builtin.copy:
    content: "{{ adf_app_merged_configuration | to_json }}"
    dest: "{{ download_location }}/{{ adf_app_name }}.json"
    mode: "0644"
  notify:
    - Unpack {{ adf_app_name }}

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Retrieve the app.config.json in the packaged application
  ansible.builtin.slurp:
    src: "{{ adf_app_config_json_path }}"
  register: app_config_json

- name: Ensure that app.config.json is actually a valid json
  ansible.builtin.assert:
    that:
      - app_config_json['content'] | b64decode | from_json
    quiet: true

- name: Ensure app.config.json is merged with current configuration
  become: true
  ansible.builtin.copy:
    content: "{{ app_config_json['content'] | b64decode | from_json | ansible.builtin.combine(adf_app_merged_configuration, recursive=true) | to_nice_json }}"
    dest: "{{ adf_app_config_json_path }}"
    mode: "0644"

- name: Add adf_app vhost config
  become: true
  ansible.builtin.template:
    src: default_server.conf.j2
    dest: "{{ nginx_vhost_path }}/{{ adf_app_name }}.conf"
    force: true
    owner: root
    group: root
    mode: 'u=rw,g=r,o=r'
  notify:
    - Restart-nginx

- name: Allow web-server to listen on tcp port {{ adf_app_port }}
  become: true
  community.general.seport:
    ports: "{{ adf_app_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  when: ansible_selinux.status == "enabled"
