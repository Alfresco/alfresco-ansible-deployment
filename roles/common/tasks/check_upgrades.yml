---
- name: Fetch status file with installed versions
  ansible.builtin.fetch:
    src: "{{ ansible_installation_status_file }}"
    fail_on_missing: false
    dest: /tmp/
  register: ansible_components_status
  changed_when: false

- name: Read installed versions from status file when available
  ansible.builtin.include_vars:
    file: /tmp/{{ inventory_hostname }}/{{ ansible_installation_status_file }}
    name: installed_components
  when: ansible_components_status.msg is undefined

- name: Check for invalid components upgrades
  any_errors_fatal: true
  block:
    - name: Fail on unsupported ACS upgrade
      ansible.builtin.fail:
      when:
        - installed_components.acs is defined
        - installed_components.api_explorer is defined
        - |
          acs.edition != installed_components.acs.edition or
          acs.version.split('.')[:3] | join('.') != installed_components.acs.version.split('.')[:3] | join('.') or
          acs.version is version(installed_components.acs.version, 'lt') or
          api_explorer.version != installed_components.api_explorer.version

    - name: Fail on unsupported AMPS upgrades
      ansible.builtin.fail:
      when: |
          installed_components is defined and
          installed_components.amps is defined and
          item in amps and
          amps[item].version != installed_components.amps[item].version
      loop: "{{ installed_components.amps | list }}"

    - name: Fail on unsupported ADW upgrades
      ansible.builtin.fail:
      when:
        - installed_components.adw is defined
        - adw.version != installed_components.adw.version

    - name: Fail on unsupported Transformers upgrades
      ansible.builtin.fail:
      when:
        - installed_components.transform is defined
        - transform.version != installed_components.transform.version

    - name: Fail on unsupported Trouter upgrades
      ansible.builtin.fail:
      when:
        - installed_components.trouter is defined
        - trouter.version != installed_components.trouter.version

    - name: Fail on unsupported SFS upgrades
      ansible.builtin.fail:
      when:
        - installed_components.sfs is defined
        - sfs.version != installed_components.sfs.version

    - name: Fail on unsupported Search upgrades
      ansible.builtin.fail:
      when:
        - installed_components.search is defined
        - search.version != installed_components.search.version

    - name: Fail on unsupported Sync upgrades
      ansible.builtin.fail:
      when:
        - installed_components.sync is defined
        - sync.version != installed_components.sync.version
  module_defaults:
    ansible.builtin.fail:
      msg: >
        You're trying to upgrade in an unsupported manner!
        Please read our documentation for more informations on what's supported and what isn't.
        https://github.com/Alfresco/alfresco-ansible-deployment/blob/master/docs/components-upgrade.md
