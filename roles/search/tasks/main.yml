---
# tasks file for search-services
- name: Include OS specific variables
  include_vars: "{{ item }}"
  loop: "{{ lookup('first_found', os_fallback, errors='ignore', wantlist=True) }}"

- name: Ensure a list of packages installed
  become: true
  become_user: root
  package:
    name: "{{ utils_search }}"
    state: present

- name: Create search binaries, config and data directories
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ group_name }}"
    mode: 'u=rwx,g=rx,o=rx'
  with_items:
    - "{{ binaries_dir }}"
    - "{{ config_dir }}"
    - "{{ data_dir }}"

- name: "Download alfresco-search-services-{{ search.version }}.zip"
  get_url:
    url: "{{ downloads.search_zip_url }}"
    dest: "{{ download_location }}/alfresco-search-services-{{ search.version }}.zip"
    checksum: "sha1:{{ downloads.search_zip_sha1_checksum }}"
    mode: 'u=r,g=r,o=r'
    url_username: "{{ nexus_user }}"
    url_password: "{{ nexus_password }}"
    timeout: 570

- name: Extract alfresco-search-services-{{ search.version }}.zip into {{ binaries_dir }}
  become: true
  unarchive:
    src: "{{ download_location }}/alfresco-search-services-{{ search.version }}.zip"
    dest: "{{ binaries_dir }}"
    remote_src: true
    creates: "{{ binaries_dir }}/README.MD"
    owner: "{{ username }}"
    group: "{{ group_name }}"

- name: "Move files from {{ binaries_dir }}/alfresco-search-services to {{ binaries_dir }}/"
  block:
    - name: "Check if {{ binaries_dir }}/alfresco-search-services exists"
      stat: 
        path: "{{ binaries_dir }}/alfresco-search-services"
      register: search_services_exists
    - name: "Copy files from {{ binaries_dir }}/alfresco-search-services to {{ binaries_dir }}/"
      copy:
        remote_src: true
        src: "{{ binaries_dir }}/alfresco-search-services/"
        dest: "{{ binaries_dir }}/"
        owner: "{{ username }}"
        group: "{{ group_name }}"
      when: search_services_exists.stat.exists
    - name: Remove old files {{ binaries_dir }}/alfresco-search-services
      file: 
        path: "{{ binaries_dir }}/alfresco-search-services" 
        state: absent

- name: Add solrcore.properties to solr templates
  become: true
  template:
    src: solrcore.properties.j2
    dest: "{{ binaries_dir }}/solrhome/templates/{{ item }}/conf/solrcore.properties"
    owner: "{{ username }}"
    group: "{{ group_name }}"
    mode: 'u=rw,g=rw,o=r'
  loop:
    - rerank
    - noRerank

- name: Copy files from "{{ binaries_dir }}/solrhome to {{ config_dir }}/"
  copy:
    remote_src: true
    src: "{{ binaries_dir }}/solrhome"
    dest: "{{ config_dir }}/"
    owner: "{{ username }}"
    group: "{{ group_name }}"

- name: add solr home to setenv.sh
  become: true
  lineinfile:
    path: "{{ config_folder }}/setenv.sh"
    insertafter: EOF
    line: "export SOLR_HOME={{ binaries_dir }}"
    owner: "{{ username }}"
    group: "{{ group_name }}"

- name: Add "{{ binaries_dir }}/solr.sh"
  become: true
  template:
    src: solr.sh
    dest: "{{ binaries_dir }}/solr.sh"
    owner: "{{ username }}"
    group: "{{ group_name }}"
    mode: 'u=rwx,g=rwx,o=rx'
  notify:
    - restart-search

- name: Add "{{ config_dir }}/solr.in.sh"
  become: true
  template:
    src: solr.in.sh
    dest: "{{ config_dir }}/solr.in.sh"
    owner: "{{ username }}"
    group: "{{ group_name }}"
    mode: 'u=rwx,g=rwx,o=rx'
  notify:
    - restart-search

- name: Check Solr running
  shell: "{{ binaries_dir }}/solr/bin/solr status"
  register: search_started
  environment:
      JAVA_HOME: "{{ java_home }}"
  failed_when: false
  changed_when: search_started.rc != 0

- name: Add alfresco-search.service
  become: true
  template:
      src: alfresco-search.service
      dest:  /etc/systemd/system/alfresco-search.service
      owner: "{{ username }}"
      group: "{{ group_name }}"
      mode: 'u=rw,g=rw,o=r'
  notify: 
    - enable-search
    - restart-search
  when: search_started.failed or '"No Solr nodes are running." in search_started.stdout'
