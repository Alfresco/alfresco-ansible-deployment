---
# tasks file for search
- name: Check playbook config is consistent
  ansible.builtin.fail:
    msg: |
      You cannot request anything but "standalone" topology when providing
      a single host in the inventory. Please add more hosts to you inventory
      file.
  when: search_topology != 'standalone' and ansible_play_hosts_all | length < 2

- name: Include OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  loop: >-
    {{ lookup('first_found', os_fallback, errors='ignore', wantlist=True) }}

- name: "Download {{ search_flavor }}-{{ search_version }}.zip"
  ansible.builtin.get_url:
    url: "{{ search_zip_url }}"
    dest: "{{ download_location }}/{{ search_flavor }}-{{ search_version }}.zip"
    checksum: "{{ search_zip_checksum_url }}"
    mode: "0644"
    url_username: "{{ nexus_user }}"
    url_password: "{{ nexus_password }}"
    timeout: 570

- name: Install & configure Search services
  become: true
  block:
    - name: Ensure a list of packages installed
      ansible.builtin.package:
        name: "{{ search_utils }}"
        state: present

    - name: Create search binaries, config and data directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0755"
      loop:
        - "{{ search_binaries_dir }}"
        - "{{ search_config_dir }}"
        - "{{ search_data_dir }}"

    - name: Extract Search services into {{ search_binaries_dir }}
      ansible.builtin.unarchive:
        src: >-
          {{ download_location }}/{{ search_flavor }}-{{ search_version }}.zip
        dest: "{{ search_binaries_dir }}"
        remote_src: true
        creates: "{{ search_binaries_dir }}/README.MD"
        owner: "{{ username }}"
        group: "{{ group_name }}"

    - name: >-
        Install Search services in Unix Filesystem Hierarchy Standard structure
      block:
        - name: >-
            Copy files from {{ search_binaries_dir }}/{{ search_flavor }} to
            {{ search_binaries_dir }}/
          ansible.builtin.copy:
            remote_src: true
            src: "{{ search_binaries_dir }}/{{ item.src }}"
            dest: "{{ item.dest }}"
            owner: "{{ username }}"
            group: "{{ group_name }}"
            mode: "0755"
          loop:
            - src: "{{ search_flavor }}/solr.in.sh"
              dest: "{{ search_config_dir }}/"
            - src: "{{ search_flavor }}/"
              dest: "{{ search_binaries_dir }}/"
            - src: "solrhome"
              dest: "{{ search_config_dir }}/"
      rescue:
        - name: Check Unix FHS dirs
          ansible.builtin.stat:
            path: "{{ item }}"
          register: search_dest_dirs
          loop:
            - "{{ search_binaries_dir }}/README.MD"
            - "{{ search_config_dir }}/solr.in.sh"
            - "{{ search_config_dir }}/solrhome"
        - name: Handle missing sources
          ansible.builtin.debug:
            msg: Looks like the FHS directory structure is already in place
          when: >-
            not search_dest_dirs.results
            | map(attribute='stat.exists')
            | difference([True])
        - name: Fail on unexcepted FHS inconsistency
          ansible.builtin.fail:
            msg: >
              Oh oh that should not happen...
              Looks like the FHS directory structure is broken and can't be
              re-created.
              Please reinstall from scratch :(
          when: >-
            search_dest_dirs.results
            | map(attribute='stat.exists')
            | difference([True])

    - name: Remove old files {{ search_binaries_dir }}/{{ search_flavor }}
      ansible.builtin.file:
        path: "{{ search_binaries_dir }}/{{ item }}"
        state: absent
      loop:
        - "{{ search_flavor }}"
        - solrhome

    - name: Add solrcore.properties to solr templates
      ansible.builtin.template:
        src: solrcore.properties.j2
        dest: "{{ search_config_dir }}/solrhome/templates/{{ item }}/conf/solrcore.properties"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0644"
      loop:
        - rerank
        - noRerank

    - name: Add solr home to setenv.sh
      ansible.builtin.lineinfile:
        path: "{{ config_folder }}/setenv.sh"
        insertafter: EOF
        line: "export SOLR_HOME={{ search_binaries_dir }}"
        owner: "{{ username }}"
        group: "{{ group_name }}"

    - name: Add "{{ search_binaries_dir }}/solr.sh"
      ansible.builtin.template:
        src: solr.sh.j2
        dest: "{{ search_binaries_dir }}/solr.sh"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0700"
      notify:
        - Restart-search

    - name: Add options to "{{ search_config_dir }}/solr.in.sh"
      vars:
        search_required_opts:
          SOLR_PID_DIR: "{{ data_folder }}"
          SOLR_HOME: "{{ search_config_dir }}/solrhome"
          SOLR_LOGS_DIR: "{{ logs_folder }}"
          LOG4J_PROPS: ${SOLR_TIP}/../logs/log4j.properties
          SOLR_OPTS: >-
            -Dsolr.content.dir={{ search_binaries_dir }}/contentstore
            $SOLR_OPTS
      ansible.builtin.blockinfile:
        path: "{{ search_config_dir }}/solr.in.sh"
        block: |
          {% for opt in search_environment | combine(search_required_opts) | dict2items %}
          {{ opt.key }}="{{ opt.value }}"
          {% endfor %}
        marker: "# {mark} ANSIBLE SEARCH CONFIG"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0755"
      notify:
        - Restart-search

    - name: Add alfresco-search.service
      ansible.builtin.template:
        src: alfresco-search.service
        dest: /etc/systemd/system/alfresco-search.service
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0644"
      notify:
        - Enable-search
        - Restart-search

    - name: Set Replication in Solr templates
      ansible.builtin.import_tasks: replication.yml
      when: search_topology == "replication"
