---
# tasks file for base-tomcat  
- name: "Check if \"{{ binaries_folder }}/tomcat.sh\" file is exists"
  stat:
    path: "{{ binaries_folder }}/tomcat.sh"
  register: wrapper

- name: "Add {{ binaries_folder }}/tomcat.sh"
  template:
      src: tomcat.sh
      dest: "{{ binaries_folder }}/tomcat.sh"
      group: "{{ group_name }}"
      owner: "{{ username }}"
      mode: 'u=rwx,g=rwx,o=rx'
  register: wrapper_created
  when: not wrapper.stat.exists

- name: Check Tomcat version is installed
  become: true
  command: "{{ binaries_folder }}/tomcat.sh configtest"
  register: install_check
  environment:
      JAVA_HOME: "{{ java_home }}"
  failed_when: false
  changed_when: install_check.rc != 0
  when: wrapper.stat.exists or wrapper_created

- name: "Create {{ tomcat_config_dir }}/conf and {{ tomcat_working }}/webapps folders"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ group_name }}"
    mode: 'u=rwx,g=rx,o=rx'
  with_items:
    - "{{ tomcat_config_dir }}/conf"
    - "{{ tomcat_working }}/webapps"

- name: Download Tomcat
  get_url:
    url: "{{ dependencies_url.tomcat }}"
    checksum: sha512:{{ dependencies_url.tomcat_sha512_checksum }}
    dest: "{{ download_location }}/apache-tomcat-{{ dependencies_version.tomcat }}.tar.gz"
    timeout: 570
  become: true
  become_user: root

- name: Unarchive a file with extra options
  unarchive:
    src: "{{ download_location }}/apache-tomcat-{{ dependencies_version.tomcat }}.tar.gz"
    dest: "/opt/"
    remote_src: true
    creates: /opt/apache-tomcat-{{ dependencies_version.tomcat }}/
  become: true
  become_user: root

- name: Recursively change ownership of "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/"
  file:
    path: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/"
    state: directory
    recurse: true
    group: "{{ group_name }}"
    owner: "{{ username }}"
    mode: 'o=r,g=rwx'

- name: check if "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/conf" dir exists
  stat:
    path: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/conf"
  register: conf_dir_exists

- name: Copy files from "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/conf to {{ tomcat_config_dir }}"
  copy:
    remote_src: true
    src: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/conf"
    dest: "{{ tomcat_config_dir }}"
    group: "{{ group_name }}"
    owner: "{{ username }}"
  when: conf_dir_exists.stat.exists
  changed_when: False

- name: Remove old files /opt/apache-tomcat-{{ dependencies_version.tomcat }}/conf
  file:
    path: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/conf"
    state: absent
  changed_when: False

- name: check if "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/temp" dir exists
  stat:
    path: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/temp"
  register: temp_dir_exists

- name: Copy files from "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/temp to {{ tomcat_working }}"
  copy:
    remote_src: true
    src: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/temp"
    dest: "{{ tomcat_working }}"
    group: "{{ group_name }}"
    owner: "{{ username }}"
  when: temp_dir_exists.stat.exists

- name: check if "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/work" dir exists
  stat:
    path: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/work"
  register: work_dir_exists

- name: Copy files from "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/work to {{ tomcat_working }}"
  copy:
    remote_src: true
    src: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/work"
    dest: "{{ tomcat_working }}/work"
    group: "{{ group_name }}"
    owner: "{{ username }}"
  when: work_dir_exists.stat.exists

- name: Remove old files "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/logs"
  file:
    path: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/logs"
    state: absent
  changed_when: False

- name: Remove old files "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/webapps"
  file:
    path: "/opt/apache-tomcat-{{ dependencies_version.tomcat }}/webapps"
    state: absent
  changed_when: False

- name: Add "{{ tomcat_config_dir }}/conf/server.xml"
  template:
      src: server.xml
      dest: "{{ tomcat_config_dir }}/conf/server.xml"
      group: "{{ group_name }}"
      owner: "{{ username }}"
  when: install_check.rc != 0 or dependencies_version.tomcat not in install_check.stderr

- name: Create a symbolic link {{ tomcat_config_dir }}/logs
  file:
    src: "{{ logs_folder }}"
    dest: "{{ tomcat_config_dir }}/logs"
    group: "{{ group_name }}"
    owner: "{{ username }}"
    state: link
    force: true

- name: Create a symbolic link "{{ tomcat_config_dir }}"/work
  file:
    src: "{{ tomcat_working }}/work"
    dest: "{{ tomcat_config_dir }}/work"
    group: "{{ group_name }}"
    owner: "{{ username }}"
    state: link
    force: true

- name: checking for TOMCAT_HOME
  shell: cat {{ config_folder }}/setenv.sh | grep TOMCAT_HOME
  register: test_tomcat_home
  failed_when: false
  changed_when: test_tomcat_home.rc != 0

- name: Add TOMCAT_HOME to setenv script
  become: true
  lineinfile:
    path: "{{ config_folder }}/setenv.sh"
    line: "export TOMCAT_HOME=/opt/apache-tomcat-{{ dependencies_version.tomcat }}"
    group: "{{ group_name }}"
    owner: "{{ username }}"
  when: test_tomcat_home.stdout != 0

- name: Add alfresco-content.service
  template:
      src: alfresco-content.service
      dest: /etc/systemd/system/alfresco-content.service
      owner: "{{ username }}"
      group: "{{ group_name }}"
  when: install_check.rc != 0 or dependencies_version.tomcat not in install_check.stderr
  notify:
    - enable-alfresco-content
