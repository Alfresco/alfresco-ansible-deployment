---
  # tasks file for base-tomcat

  - name: Check Tomcat version is installed
    command: "/opt/apache-tomcat-{{ tomcat_version }}/bin/catalina.sh configtest"
    register: install_check
    environment:
        JAVA_HOME: "{{ java_home }}"
    failed_when: false
    changed_when: install_check.rc != 0

  - name: Create Alfresco group {{ GROUPNAME }}
    become: true
    group:
        name: "{{ GROUPNAME }}"
        gid: "{{ GROUPID }}"

  - name: Create Tomcat user {{ USERNAME }}
    become: true
    user:
      name: "{{ USERNAME }}"
      comment: Tomcat user
      uid: "{{ USERID }}"
      group: "{{ GROUPNAME }}"

  - name: Create dir /opt/alfresco
    become: true
    file:
      path: "/opt/alfresco"
      state: directory
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
      recurse: yes
      mode: '0755'

  - name: Create log dir /var/log/alfresco
    become: true
    file:
      path: "/var/log/alfresco"
      state: directory
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
      recurse: yes
      mode: '0755'

  - name: Create config dir {{ tomcat_config }}
    become: true
    file:
      path: "{{ tomcat_config }}"
      state: directory
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
      mode: '0755'
      recurse: yes

  - name: Create webapps dir {{ tomcat_working }}/webapps
    become: true
    file:
      path: "{{ tomcat_working }}/webapps"
      state: directory
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
      recurse: yes
      mode: '0755'

  - name: Download Tomcat
    get_url:
      url: "{{ item }}"
      dest: "/opt/apache-tomcat-{{ tomcat_version }}.tar.gz"
    register: download
    until: download is succeeded
    failed_when: false
    loop:
      "{{ tomcat_tgz_urls }}"
    become: true
    become_user: root
    when: install_check.rc != 0 or tomcat_version not in install_check.stderr

  - name: Unarchive a file with extra options
    unarchive:
      src: "/opt/apache-tomcat-{{ tomcat_version }}.tar.gz"
      dest: "/opt/"
      remote_src: yes
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
      mode: 'o=r,g=rwx'
    become: true
    become_user: root
    when: install_check.rc != 0 or tomcat_version not in install_check.stderr

  # - name: Recursively change ownership of "/opt/apache-tomcat-{{ tomcat_version }}/"
  #   become: true
  #   file:
  #     path: "/opt/apache-tomcat-{{ tomcat_version }}/"
  #     state: directory
  #     recurse: yes
  #     group: "{{ GROUPNAME }}"
  #     owner: "{{ USERNAME }}"
  #     mode: 'o=r,g=rwx'
  #   when: install_check.rc != 0 or tomcat_version not in install_check.stderr

  - name: check if conf exists
    shell: "ls -l {{ tomcat_config }}/conf"
    register: conf_state
    failed_when: false
    changed_when: false

  - name: Copy files from "/opt/apache-tomcat-{{ tomcat_version }}/conf to {{ tomcat_config }}"
    become: true
    copy:
      remote_src: True
      src: "/opt/apache-tomcat-{{ tomcat_version }}/conf"
      dest: "{{ tomcat_config }}"
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
    when: conf_state.rc !=0

  - name: Remove old files "/opt/apache-tomcat-{{ tomcat_version }}/conf"
    become: true
    file: path="/opt/apache-tomcat-{{ tomcat_version }}/conf" state=absent

  - name: check if temp exists
    shell: "ls -l {{ tomcat_working }}/temp"
    register: temp_state
    failed_when: false
    changed_when: false

  - name: Copy files from "/opt/apache-tomcat-{{ tomcat_version }}/temp to {{ tomcat_working }}"
    become: true
    copy:
      remote_src: True
      src: "/opt/apache-tomcat-{{ tomcat_version }}/temp"
      dest: "{{ tomcat_working }}"
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
    when: temp_state.rc !=0

  - name: Remove old files "/opt/apache-tomcat-{{ tomcat_version }}/temp"
    become: true
    file: path="/opt/apache-tomcat-{{ tomcat_version }}/temp" state=absent

  - name: check if work exists
    shell: "ls -l {{ tomcat_config }}/work"
    register: work_state
    failed_when: false
    changed_when: false

  - name: Copy files from "/opt/apache-tomcat-{{ tomcat_version }}/work to {{ tomcat_working }}"
    become: true
    copy:
      remote_src: True
      src: "/opt/apache-tomcat-{{ tomcat_version }}/work"
      dest: "{{ tomcat_working }}/work"
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
    when: temp_state.rc !=0

  - name: Remove old files "/opt/apache-tomcat-{{ tomcat_version }}/temp"
    become: true
    file: path="/opt/apache-tomcat-{{ tomcat_version }}/temp" state=absent

  - name: Remove old files "/opt/apache-tomcat-{{ tomcat_version }}/logs"
    become: true
    file: path="/opt/apache-tomcat-{{ tomcat_version }}/logs" state=absent

  - name: Remove old files "/opt/apache-tomcat-{{ tomcat_version }}/webapps"
    become: true
    file: path="/opt/apache-tomcat-{{ tomcat_version }}/webapps" state=absent

  - name: Add "{{ tomcat_config }}/conf/server.xml"
    become: true
    template:
        src: server.xml
        dest: "{{ tomcat_config }}/conf/server.xml"
        group: "{{ GROUPNAME }}"
        owner: "{{ USERNAME }}"
    when: install_check.rc != 0 or tomcat_version not in install_check.stderr

  - name: Create a symbolic link /etc/opt/alfresco/tomcat/logs
    become: true
    file:
      src: /var/log/alfresco
      dest: "{{ tomcat_config }}/logs"
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
      state: link
      force: yes

  - name: Create a symbolic link "{{ tomcat_config }}"/work
    become: true
    file:
      src: "{{ tomcat_working }}/work"
      dest: "{{ tomcat_config }}/work"
      group: "{{ GROUPNAME }}"
      owner: "{{ USERNAME }}"
      state: link
      force: yes

  - name: checking for TOMCAT_HOME
    shell: cat  /etc/opt/alfresco/setenv.sh | grep TOMCAT_HOME
    register: test_tomcat_home
    failed_when: false
    changed_when: test_tomcat_home.rc != 0

  - name: adding license server
    become: true
    lineinfile: dest=/etc/opt/alfresco/setenv.sh line="export TOMCAT_HOME=/opt/apache-tomcat-{{ tomcat_version }}"
    when: test_tomcat_home.stdout != 0

  - name: Add /opt/alfresco/tomcat.sh
    become: true
    template:
        src: tomcat.sh
        dest: "/opt/alfresco/tomcat.sh"
        group: "{{ GROUPNAME }}"
        owner: "{{ USERNAME }}"
        mode: 'u=rwx,g=rwx,o=rx'
    when: install_check.rc != 0

  - name: Add tomcat.service
    become: true
    template:
        src: tomcat.service
        dest: /usr/lib/systemd/system/tomcat.service
        owner: root
        group: root
    notify: tomcat-restart
    when: install_check.rc != 0 or tomcat_version not in install_check.stderr

  - name: Ensure tomcat service is started and enabled on boot
    become: true
    systemd:
      name: tomcat.service
      state: started
      enabled: true
