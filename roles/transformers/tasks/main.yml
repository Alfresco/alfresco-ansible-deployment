---
# tasks file for transformers
- name: Include OS family variables
  ansible.builtin.include_vars:
    file: "{{ os_family_yml }}"

- name: Include OS distribution variables
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
      - "{{ os_distribution_yml }}"
      skip: True

- name: Include OS version variables
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
      - "{{ os_version_yml }}"
      skip: True

- name: Configure Java keystore
  ansible.builtin.include_role:
    name: ../roles/java
    tasks_from: keystores
  when: ats_keystore
  vars:
    java_keystore: "{{ ats_keystore }}"

- name: Enable EPEL repository
  become: true
  vars:
    epel_ver: "{{ ansible_distribution_major_version }}"
    epel_gpg_base: https://dl.fedoraproject.org/pub/epel
    epel_meta_base: https://mirrors.fedoraproject.org/metalink
    epel_meta_args: "&arch=$basearch&infra=$infra&content=$contentdir"
  ansible.builtin.yum_repository:
    name: epel
    description: EPEL YUM repo
    metalink: >-
      {{ epel_meta_base }}?repo=epel-{{ epel_ver }}{{ epel_meta_args }}
    gpgcheck: true
    gpgkey: >-
      {{ epel_gpg_base }}/RPM-GPG-KEY-EPEL-{{ epel_ver }}
  when: pkg_format == 'rpm'

- name: ATS installation
  become: true
  block:
    - name: Ensure a list of packages installed
      ansible.builtin.package:
        name: "{{ utils_transform }}"
        state: present

    - name: Install optional ghostscript packages (AGPL)
      ansible.builtin.package:
        name: "{{ ghostscript_packages }}"
        state: present
      when: include_ghostscript

    - name: Create transform-services folder
      ansible.builtin.file:
        path: "{{ ats_home }}"
        state: directory
        mode: "0755"
        owner: "{{ username }}"
        group: "{{ group_name }}"

    - name: Download alfresco-pdf-renderer-linux.tgz
      ansible.builtin.get_url:
        url: "{{ transformers_pdf_archive_url }}"
        checksum: "{{ transformers_pdf_archive_checksum_url }}"
        dest: "{{ download_location }}/alfresco-pdf-renderer-{{ transformers_pdf_version }}-linux.tgz"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0644"

    - name: Extract alfresco-pdf-renderer-linux.tgz
      ansible.builtin.unarchive:
        src: "{{ download_location }}/alfresco-pdf-renderer-{{ transformers_pdf_version }}-linux.tgz"
        dest: "{{ ats_home }}"
        remote_src: true
        owner: "{{ username }}"
        group: "{{ group_name }}"
        creates: "{{ ats_home }}/alfresco-pdf-renderer"

    - name: Download {{ transform.artifact_name }}-{{ transform.version }}.jar
      ansible.builtin.get_url:
        url: "{{ downloads.transform_jar_url }}"
        dest: "{{ binaries_folder }}/transform-service/{{ transform.artifact_name }}-{{ transform.version }}.jar"
        checksum: sha1:{{ lookup('url', downloads.transform_jar_sha1_checksum_url, username=nexus_user, password=nexus_password) }}
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: 'u=rwx,g=rwx,o=rx'
        url_username: "{{ nexus_user }}"
        url_password: "{{ nexus_password }}"

    - name: Create log file with correct permissions
      ansible.builtin.file:
        path: "{{ logs_folder }}/ats-ate-aio.log"
        state: touch
        mode: "0640"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        access_time: preserve
        modification_time: preserve

    - name: Add AIO config mTLS config file
      ansible.builtin.template:
        src: mtls.properties.j2
        dest: "{{ binaries_folder }}/transform-service/tengine-mtls.properties"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0600"
      when: ats_keystore
      notify:
        - wait-for-activemq
        - Restart-aio

    - name: Delete deprecated startup script
      ansible.builtin.file:
        path: "{{ binaries_folder }}/ats-ate-aio.sh"
        state: absent

    - name: Add alfresco-tengine-aio service
      ansible.builtin.template:
        src: alfresco-tengine-aio.service.j2
        dest: "/etc/systemd/system/alfresco-tengine-aio.service"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: 'u=rw,g=rw,o=r'
        force: true
      notify:
        - wait-for-activemq
        - Enable-aio
        - Restart-aio

- name: Install Imagemagick
  ansible.builtin.include_tasks: imagemagick.yml

- name: Warning about lack of support for arm64 libreoffice
  when: ansible_architecture == 'aarch64'
  ansible.builtin.debug:
    msg: "LibreOffice is not supported on arm64 architecture. Skipping installation."

- name: Install LibreOffice
  when: ansible_architecture == 'x86_64'
  ansible.builtin.include_tasks: libreoffice.yml

- name: Check if service restart is needed
  ansible.builtin.debug:
    msg: triggering service restart
  when: java_needs_restart
  changed_when: true
  notify: Restart-aio
