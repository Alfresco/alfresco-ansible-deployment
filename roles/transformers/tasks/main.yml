---
# tasks file for transformers
- name: Include OS family variables
  include_vars:
    file: "{{ os_family_yml }}"

- name: Include OS version variables
  include_vars:
    file: "{{ os_version_yml }}"

- name: Instanciate Java keystore
  ansible.builtin.include_role:
    name: ../roles/java
    tasks_from: keystores
  when: ats_keystore
  vars:
    java_keystore: "{{ ats_keystore }}"

- name: Enable EPEL repository
  become: true
  vars:
    epel_ver: "{{ ansible_distribution_major_version }}"
    epel_gpg_base: https://dl.fedoraproject.org/pub/epel
    epel_meta_base: https://mirrors.fedoraproject.org/metalink
    epel_meta_args: "&arch=$basearch&infra=$infra&content=$contentdir"
  yum_repository:
    name: epel
    description: EPEL YUM repo
    metalink: >-
      {{ epel_meta_base }}?repo=epel-{{ epel_ver }}{{ epel_meta_args }}
    gpgcheck: true
    gpgkey: >-
      {{ epel_gpg_base }}/RPM-GPG-KEY-EPEL-{{ epel_ver }}
  when: pkg_format == 'rpm'

- name: Download libreoffice package archive
  get_url:
    url: "{{ libreoffice_archive_url }}"
    checksum: sha1:{{ lookup('url', libreoffice_archive_sha1_checksum_url) }}
    dest: "{{ download_location }}/libreoffice.tar.gz"
  register: libreoffice_download
  async: 3600
  poll: 0
  tags:
    - molecule-idempotence-notest

- name: Download ImageMagick distribution
  vars:
    pkg_name: "{{ item | replace('imagemagick-distribution', 'imagemagick-distribution-' + imagemagick_version) }}.{{ pkg_format }}"
    pkg_url: "{{ nexus_repository.releases }}/../imagemagick/imagemagick-distribution/{{ imagemagick_version }}/{{ pkg_name }}"
  get_url:
    url: "{{ pkg_url }}"
    checksum: "sha1:{{ lookup('url', pkg_url + '.sha1') }}"
    dest: "{{ download_location }}/{{ pkg_name }}"
    mode: "0644"
  loop: "{{  imagemagick_packages }}"

- name: ATS installation
  become: true
  block:
    - name: Ensure a list of packages installed
      package:
        name: "{{ utils_transform }}"
        state: present

    - name: Install optional ghostscript packages (AGPL)
      package:
        name: "{{ ghostscript_packages }}"
        state: present
      when: include_ghostscript

    - name: Create transform-services folder
      file:
        path: "{{ ats_home }}"
        state: directory
        mode: "0755"
        owner: "{{ username }}"
        group: "{{ group_name }}"

    - name: Download alfresco-pdf-renderer-linux.tgz
      get_url:
        url: "{{ alfresco_pdf_renderer }}"
        checksum: sha1:{{ lookup('url', alfresco_pdf_renderer_sha1_checksum_url) }}
        dest: "{{ download_location }}/alfresco-pdf-renderer-{{ dependencies_version.pdf_renderer }}-linux.tgz"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0644"

    - name: Extract alfresco-pdf-renderer-linux.tgz
      unarchive:
        src: "{{ download_location }}/alfresco-pdf-renderer-{{ dependencies_version.pdf_renderer }}-linux.tgz"
        dest: "{{ ats_home }}"
        remote_src: true
        owner: "{{ username }}"
        group: "{{ group_name }}"
        creates: "{{ ats_home }}/alfresco-pdf-renderer"


    - name: Download {{ transform.artifact_name }}-{{ transform.version }}.jar
      get_url:
        url: "{{ downloads.transform_jar_url }}"
        dest: "{{ binaries_folder }}/transform-service/{{ transform.artifact_name }}-{{ transform.version }}.jar"
        checksum: sha1:{{ lookup('url', downloads.transform_jar_sha1_checksum_url, username=nexus_user, password=nexus_password) }}
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: 'u=rwx,g=rwx,o=rx'
        url_username: "{{ nexus_user }}"
        url_password: "{{ nexus_password }}"

    - name: Add ats common vars to setenv file
      blockinfile:
        path: "{{ config_folder }}/setenv.sh"
        marker: "# {mark} ATS COMMON ENV VARS"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        block: |
          export ATS_HOME={{ binaries_folder }}/transform-service
          export ATS_TENGINE_AIO_HOST={{ ats_tengine_aio_host }}
          export ATS_SHARED_FS_HOST={{ sfs_host }}
        insertafter: EOF
    - name: Add ats dependencies vars to setenv file
      vars:
        im_lib: >-
          {% if pkg_format == 'deb' %}${IMAGEMAGICK_HOME}/lib/x86_64-linux-gnu/{% else %}/usr/lib64/{% endif %}
        im_cfg: >-
          {% if pkg_format == 'deb' %}${IMAGEMAGICK_DYN}ImageMagick-{{ imagemagick_version.split('-')[0] -}}{% else %}${IMAGEMAGICK_HOME}{% endif %}
      blockinfile:
        path: "{{ config_folder }}/setenv.sh"
        marker: "# {mark} ATS DEPENDENCIES ENV VARS"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        block: |
          export LIBREOFFICE_HOME={{ libreoffice_home }}
          export IMAGEMAGICK_HOME={{ imagemagick_home }}
          export IMAGEMAGICK_DYN={{ im_lib }}
          export IMAGEMAGICK_CONFIG={{ im_cfg }}/config-Q16HDRI
          export IMAGEMAGICK_CODERS={{ im_cfg }}/modules-Q16HDRI/coders
          export IMAGEMAGICK_EXE="{% if pkg_format == 'deb' %}${IMAGEMAGICK_HOME}/bin/{% endif %}convert"
        insertafter: EOF

    - name: Create log file with correct permissions
      file:
        path: "{{ logs_folder }}/ats-ate-aio.log"
        state: touch
        mode: u=rwx,g=rw,o-rwx
        owner: "{{ username }}"
        group: "{{ group_name }}"
      changed_when: false

    - name: Add AIO config mTLS config file
      template:
        src: mtls.properties.j2
        dest: "{{ binaries_folder }}/transform-service/tengine-mtls.properties"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: "0600"
      when: ats_keystore
      notify:
        - Wait-for-activemq
        - Restart-aio

    - name: Add AIO startup script
      template:
        src: ats-ate-aio.sh.j2
        dest: "{{ binaries_folder }}/ats-ate-aio.sh"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: 'u=rwx,g=rwx,o=rx'
        force: true
      notify:
        - Wait-for-activemq
        - Restart-aio

    - name: Add alfresco-tengine-aio service
      template:
        src: alfresco-tengine-aio.service
        dest: "/etc/systemd/system/alfresco-tengine-aio.service"
        owner: "{{ username }}"
        group: "{{ group_name }}"
        mode: 'u=rw,g=rw,o=r'
        force: true
      notify:
        - Wait-for-activemq
        - Enable-aio
        - Restart-aio

- name: Verifying if libreoffice finished downloading
  async_status:
    jid: "{{ libreoffice_download.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  delay: 60
  retries: 59
  tags:
    - molecule-idempotence-notest

- name: Extract libreoffice-dist-linux.gz
  vars:
    lo_arch: >-
      {{ ansible_system }}_{{ ansible_architecture | replace('_', '-') }}_{{ pkg_format }}
  unarchive:
    src: "{{ download_location }}/libreoffice.tar.gz"
    dest: "{{ download_location }}/"
    remote_src: true
    creates: >-
      {{ download_location }}/LibreOffice_{{ dependencies_version.libreoffice }}_{{ lo_arch }}/{{ pkg_format | upper }}S/

- name: Install LibreOffice & imageMagick
  include_tasks: "dependencies-{{ pkg_format }}.yml"
