---
# tasks file for roles/activemq

- name: Check if activemq executable exists
  stat:
      path: "{{ activemq_home }}/bin/activemq"
  register: activemq_exe

- name: Download and untar activemq
  become: true
  unarchive:
      src: "{{ download_url }}"
      remote_src: true
      group: "{{ group_name }}"
      owner: "{{ username }}"
      dest: "/opt/"
      mode: 'u=rwx,g=rwx,o=rx'
  when: not activemq_exe.stat.exists

- name: Check if configuration folder exists
  stat:
    path: "{{ config_folder }}/activemq"
  register: activemq_configs

- name: Create configuration folder
  file:
    path: "{{ config_folder }}/activemq"
    state: directory
    owner: "{{ username }}"
    group: "{{ group_name }}"
    mode: 'u=rwx,g=rwx,o=rx'
  when: not activemq_configs.stat.exists

- name: Check for conf folder
  stat:
    path: "{{ activemq_conf }}"
  register: conf_existence

- name: Move configuration files
  command: "mv {{ activemq_home }}/conf {{ config_folder }}/activemq removes={{ activemq_home }}/conf"
  when: not conf_existence.stat.exists

- name: Check if data folder exists
  stat:
    path: "{{ data_folder }}/activemq"
  register: activemq_data_folder

- name: Create data folder
  file:
    path: "{{ data_folder }}/activemq"
    state: directory
    owner: "{{ username }}"
    group: "{{ group_name }}"
    mode: 'u=rwx,g=rwx,o=rx'
  when: not activemq_data_folder.stat.exists

- name: Check for data
  stat:
    path: "{{ activemq_data }}"
  register: data_existence

- name: Move data files
  command: "mv {{ activemq_home }}/data {{ data_folder }}/activemq removes={{ activemq_home }}/data"
  when: not data_existence.stat.exists

- name: Change location of ActiveMQ logs
  become: true
  become_user: "{{ username }}"
  replace:
    path: "{{ activemq_conf }}/log4j.properties"
    regexp: "activemq.data"
    replace: "activemq.log"

- name: Add activemq_home and host to setenv script
  become: true
  become_user: "{{ username }}"
  blockinfile:
    path: "{{ config_folder }}/setenv.sh"
    marker: "# {mark} ACTIVEMQ ENV VARS"
    block: |
      export ACTIVEMQ_HOME={{ activemq_home }}
      export ACTIVEMQ_HOST={{ activemq_host }}

- name: Check if activemq wrapper exists
  stat:
    path: "{{ binaries_folder }}/activemq.sh"
  register: activemq_wrapper_exists

- name: Add activemq wrapper script
  become: true
  become_user: "{{ username }}"
  template:
      src: "activemq.sh"
      dest: "{{ binaries_folder }}"
      owner: "{{ username }}"
      group: "{{ group_name }}"
      mode: 'u=rwx,go=rx'
  when: not activemq_wrapper_exists.stat.exists

- name: Add activemq.service
  template:
      src: activemq.service
      dest: /etc/systemd/system/activemq.service
      owner: "{{ username }}"
      group: "{{ group_name }}"
      mode: 'u=rwx,g=rwx,o=rx'

- name: Ensure activemq service is started and enabled on boot
  systemd:
    name: activemq.service
    state: started
    enabled: true