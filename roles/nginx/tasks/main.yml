---
- name: Include OS specific variables
  include_vars: "{{ item }}"
  loop: "{{ lookup('first_found', os_fallback, errors='ignore', wantlist=True) }}"

- name: Prepare RPM package manager
  become: true
  block:
    - name: Enable nginx repo.
      template:
        src: nginx.repo
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
    
    - name: Wait for yum lock release (Ansible 2.8.0 workaround)
      shell: ps -aux | grep yum
      register: yum_lock
      retries: 20
      delay: 6
      until: yum_lock.stdout_lines|length <= 2
      changed_when: false
  when: ansible_pkg_mgr != 'apt'

- name: Ensure nginx is installed.
  package:
    name: "{{ nginx_pack }}{%if ansible_pkg_mgr == 'apt' %}={% else %}-{% endif %}{{ nginx_version }}"
    state: present

# Vhost configuration.
- import_tasks: vhosts.yml

# Nginx setup.
- name: Copy nginx configuration in place.
  template:
    src: "{{ nginx_conf_template }}"
    dest: "{{ nginx_conf_file_path }}"
    owner: root
    group: "{{ root_group }}"
    mode: 'u=rw,g=r,o=r'
  notify: reload-nginx

- name: Set httpd_can_network_connect flag on and keep it persistent across reboots
  become: true
  seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  when: ansible_selinux.status == "enabled"

- name: Ensure nginx service is running as configured.
  service:
    name: nginx
    state: "{{ nginx_service_state }}"
    enabled: "{{ nginx_service_enabled }}"
  notify: reload-nginx
