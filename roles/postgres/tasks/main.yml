---
- name: Include OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  loop: >-
    {{ lookup('first_found', os_fallback, errors='ignore', wantlist=True) }}

- name: Install PostgreSQL RDBMS
  become: true
  block:
    - name: Prepare package manager
      ansible.builtin.include_tasks: "{{ ansible_pkg_mgr }}_repo.yml"

    - name: Install packages
      ansible.builtin.package:
        name: "{{ postgresql_packages }}"
        state: present
        update_cache: true
      notify:
        - Enable-postgresql

    - name: Initialize the system database
      ansible.builtin.command:
        cmd: "{{ postgresql_setup_path }} initdb"
        creates: "{{ postgresql_data_path }}/PG_VERSION"
      when: ansible_os_family == 'RedHat'

- name: Configure PostgreSQL RDBMS
  become: true
  notify:
    - Restart-postgresql
  block:
    - name: Configure postgresql to listen on all IP interfaces
      ansible.builtin.lineinfile:
        path: "{{ postgresql_conf_path }}/postgresql.conf"
        regexp: ^\s*listen_addresses\s*=
        line: "listen_addresses = '{{ postgres_listen_addresses }}'"

    - name: Custom postgresql Configuration
      ansible.builtin.lineinfile:
        path: "{{ postgresql_conf_path }}/postgresql.conf"
        regexp: "^{{ item['line'] }}"
        line: "{{ item['line'] }}"
        state: "{{ item['state'] | default(omit) }}"
        backup: true
      with_items: "{{ postgres_config }}"

    - name: Configure basic postgresql client auth
      ansible.builtin.blockinfile:
        path: "{{ postgresql_conf_path }}/pg_hba.conf"
        marker: "# {mark} local connections allowed - Ansible managed block"
        block: |
          local all postgres peer
          host all all 127.0.0.1/32 md5
        owner: postgres
        group: postgres
        mode: "u=rw"

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
