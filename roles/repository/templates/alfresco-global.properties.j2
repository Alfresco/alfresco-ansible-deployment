{% if acs.version is version('7.0.0', '>=') %}
deployment.method=ANSIBLE
{% endif %}

{% if repo_db_url == "" %}
db.url=jdbc:postgresql://${db.host}:{{ ports_cfg.postgres.sql }}/{{ repo_db_name }}
db.host={{ db_host }}
{% else %}
db.url={{ repo_db_url }}
{% endif %}

db.driver={{ repo_db_driver }}
db.username={{ repo_db_username }}
db.password={{ repo_db_password }}

alfresco.host={% if fqdn_alfresco %}{{ fqdn_alfresco }}{% else %}{{ nginx_host }}{% endif %}

alfresco.port={% if use_ssl | bool %}{{ ports_cfg.nginx.https }}{% else %}{{ ports_cfg.nginx.http }}{% endif %}

alfresco.protocol={% if use_ssl | bool %}https{% else %}http{% endif %}

share.host={% if fqdn_alfresco %}{{ fqdn_alfresco }}{% else %}{{ nginx_host }}{% endif %}

share.port={% if use_ssl | bool %}{{ ports_cfg.nginx.https }}{% else %}{{ ports_cfg.nginx.http }}{% endif %}

share.protocol={% if use_ssl | bool %}https{% else %}http{% endif %}

index.subsystem.name=solr6
solr.secureComms={% if acs.version is version('7.2.0', '>=') %}secret{% else %}none{%endif %}

solr.port={{ ports_cfg.search.http }}
solr.host={{ solr_host }}

dir.root={{ content_data_folder }}/content
{% if acs.version is version('7.0.0', '<') %}
dir.keystore={{ content_data_folder }}/keystore
{% elif use_custom_keystores %}

{% else %}
encryption.keystore.location={{ content_data_folder }}/keystore/keystore
encryption.keystore.keyMetaData.location={{ content_data_folder }}/keystore/keystore-passwords.properties
encryption.keyAlgorithm=DESede
encryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
encryption.keystore.type=JCEKS
encryption.keystore.backup.type=JCEKS
{% endif %}

dir.license.external={{ settings_folder }}/licenses

alfresco.cluster.enabled={% if groups['repository'] | length > 1 and not cluster_keepoff %}true{% else %}false{% endif %}

transform.service.enabled=true
local.transform.service.enabled=true
transform.service.url=http://{{ trouter_host }}:{{ ports_cfg.transformers.trouter }}
localTransform.core-aio.url=http://{{ ats_tengine_aio_host }}:{{ ports_cfg.transformers.tengine }}/
alfresco-pdf-renderer.url=${localTransform.core-aio.url}
jodconverter.url=${localTransform.core-aio.url}
img.url=${localTransform.core-aio.url}
tika.url=${localTransform.core-aio.url}
transform.misc.url=${localTransform.core-aio.url}
sfs.url=http://{{sfs_host}}:{{ ports_cfg.sfs.http }}/

messaging.broker.url=failover:(tcp://{{ activemq_host }}:{{ ports_cfg.activemq.openwire }})?timeout=3000

dsync.service.uris={% if use_ssl | bool %}https{% else %}http{% endif %}://{% if fqdn_alfresco %}{{ fqdn_alfresco }}{% else %}{{ nginx_host }}{% endif %}:{% if use_ssl | bool %}{{ ports_cfg.nginx.https }}{% else %}{{ ports_cfg.nginx.http }}{% endif %}/alfresco

aos.baseUrlOverwrite={% if use_ssl | bool %}https{% else %}http{% endif %}://{% if fqdn_alfresco %}{{ fqdn_alfresco }}{% else %}{{ nginx_host }}{% endif %}:{% if use_ssl | bool %}{{ ports_cfg.nginx.https }}{% else %}{{ ports_cfg.nginx.http }}{% endif %}/alfresco/aos
