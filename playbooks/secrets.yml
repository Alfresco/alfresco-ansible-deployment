---
- hosts: all:!external
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Ensure no secrets are still provided via group_vars and/or hostvars
      assert:
        that:
          - repo_db_password is not defined
          - sync_db_password is not defined
          - reposearch_shared_secret is not defined
        msg:
          "The current playbook version expect secrets to be provided in vars/secrets.yml.
          If you are upgrading from a previous playbook version, please read to docs/playbook-upgrade.md"
        quiet: true

- name: Autogenerate secrets if this is a testing environment
  ansible.builtin.import_playbook: secrets-init.yml
  when: autogen_unsecure_secrets is defined and autogen_unsecure_secrets|bool

- hosts: localhost
  gather_facts: false
  vars:
    base_folder: "{{ playbook_dir }}/.."
    vars_folder: "{{ base_folder }}/vars"
    secrets_file: "{{ vars_folder }}/secrets.yml"
  tasks:
    - name: Ensure vars folder exists
      ansible.builtin.file:
        path: "{{ vars_folder }}"
        state: directory

    - name: Ensure secrets.yml exists
      ansible.builtin.file:
        path: "{{ secrets_file }}"
        state: touch
        modification_time: preserve
        access_time: preserve

    - name: Load secrets as localhost hostvars
      include_vars:
        file: ../vars/secrets.yml

    - name: Ensure that all mandatory secrets are properly set
      assert:
        that:
          - repo_db_password is defined and repo_db_password | length > 0
          - sync_db_password is defined and sync_db_password | length > 0
          - reposearch_shared_secret is defined and reposearch_shared_secret | length > 0
        msg: "Mandatory secrets are missing from vars/secrets.yml file.
          If this is a test environment, you can autogenerate them setting
          the autogen_unsecure_secrets variable to true. Otherwise, please take a look
          at docs/deployment-guide.md, Secrets management section"
        quiet: true

    - name: Ensure activemq_password is set when required
      assert:
        that: activemq_password is defined and activemq_password | length > 0
        msg: "activemq_password must have been already set at this point"
        quiet: true
      when: groups.external_activemq | default(False)

- hosts: repository:search
  gather_facts: false
  tasks:
    - name: Set tracking/search shared secret
      set_fact:
        reposearch_shared_secret: "{{ hostvars.localhost.reposearch_shared_secret }}"

- hosts: repository:database
  gather_facts: false
  tasks:
    - name: Set repo_db_password secret
      set_fact:
        repo_db_password: "{{ hostvars.localhost.repo_db_password }}"

- hosts: syncservice:database
  gather_facts: false
  tasks:
    - name: Set sync_db_password secret
      set_fact:
        sync_db_password: "{{ hostvars.localhost.sync_db_password }}"

- hosts: activemq:repository:transformers:syncservice
  gather_facts: false
  tasks:
    - name: Set external activemq credentials if present
      set_fact:
        activemq_username: "{{ groups.external_activemq | default([]) | map('extract', hostvars, ['activemq_username']) | first | default('admin') }}"
        activemq_password: "{{ hostvars.localhost.activemq_password }}"

- hosts: repository
  gather_facts: false
  tasks:
    - name: Set custom keystore password if provided
      set_fact:
        repo_custom_keystore_password: "{{ hostvars.localhost.repo_custom_keystore_password }}"
      when: hostvars.localhost.repo_custom_keystore_password is defined
    - name: Set custom keystore metadata password if provided
      set_fact:
        repo_custom_keystore_metadata_password: "{{ hostvars.localhost.repo_custom_keystore_metadata_password }}"
      when: hostvars.localhost.repo_custom_keystore_metadata_password is defined
