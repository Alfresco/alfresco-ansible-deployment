---
# This playbook is used to run preliminary upgrade checks for the hosts in the ACS deployment.
- name: Include vars based on acs major version
  ansible.builtin.import_playbook: include-vars.yml

- name: Run preliminary upgrade checks for all hosts
  hosts: all:!external
  gather_facts: false
  tasks:
    - name: Fetch status file with installed versions
      ansible.builtin.fetch:
        src: "{{ ansible_installation_status_file }}"
        fail_on_missing: false
        dest: /tmp/
      register: ansible_components_status
      changed_when: false

    - name: Read installed versions from status file when available
      ansible.builtin.include_vars:
        file: /tmp/{{ inventory_hostname }}/{{ ansible_installation_status_file }}
        name: installed_components
      when: ansible_components_status.msg is undefined

    - name: Check for unsupported components upgrades
      any_errors_fatal: true
      module_defaults:
        ansible.builtin.fail:
          msg: >
            You're trying to upgrade in an unsupported manner!
            Please read our documentation for more informations on what's supported and what isn't.
            https://github.com/Alfresco/alfresco-ansible-deployment/blob/master/docs/components-upgrade.md
      block:
        - name: Fail on unsupported ACS upgrade
          ansible.builtin.fail:
          when:
            - installed_components.acs is defined
            - installed_components.api_explorer is defined
            - |
              acs.edition != installed_components.acs.edition or
              acs.version.split('.')[:3] | join('.') != installed_components.acs.version.split('.')[:3] | join('.') or
              acs.version is version(installed_components.acs.version, 'lt') or
              acs_play_repository_api_explorer_version != installed_components.api_explorer.version

        - name: Initialize evaluation of currently installed amps
          ansible.builtin.set_fact:
            amps: {}

        - name: Add common amps
          ansible.builtin.set_fact:
            amps: >-
              {{ amps | combine({
                'aos_module': {
                  'version': acs_play_repository_amp_aos_module_version
                },
                'googledrive_repo': {
                  'version': acs_play_repository_amp_googledrive_repo_version
                },
                'googledrive_share': {
                  'version': acs_play_repository_amp_googledrive_share_version
                }
              }) }}

        - name: Add device sync amp
          ansible.builtin.set_fact:
            amps: >-
              {{ amps | combine({
                'device_sync': {
                  'version': acs_play_repository_amp_device_sync_version
                }
              }) }}
          when: acs.edition == 'Enterprise'

        - name: Fail on unsupported AMPS upgrades
          ansible.builtin.fail:
          when: |
              installed_components is defined and
              installed_components.amps is defined and
              item in amps and
              amps[item].version != installed_components.amps[item].version
          loop: "{{ installed_components.amps | list }}"

        - name: Fail on unsupported Transformers upgrades
          ansible.builtin.fail:
          when:
            - installed_components.transform is defined
            - acs_play_transformers_aio_version != installed_components.transform.version

        - name: Fail on unsupported Trouter upgrades
          ansible.builtin.fail:
          when:
            - installed_components.trouter is defined
            - acs_play_trouter_version != installed_components.trouter.version

        - name: Fail on unsupported SFS upgrades
          ansible.builtin.fail:
          when:
            - installed_components.sfs is defined
            - acs_play_sfs_version != installed_components.sfs.version

        - name: Fail on unsupported Search upgrades
          ansible.builtin.fail:
          when:
            - installed_components.search is defined
            - acs_play_search_version != installed_components.search.version

        - name: Fail on unsupported Sync upgrades
          ansible.builtin.fail:
          when:
            - installed_components.sync is defined
            - acs_play_sync_version != installed_components.sync.version
