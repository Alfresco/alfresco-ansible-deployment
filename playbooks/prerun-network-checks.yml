---
- name: Run preliminary network checks for repository hosts
  hosts: repository
  become: true
  tasks:
    - name: Check db connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.database | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.database[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.postgres.sql }}"
        delegate_target: "{{ groups.database | first }}"
      when: repo_db_url == ""

    - name: Check activemq connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.activemq | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.activemq[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.activemq[activemq_protocol] }}"
        delegate_target: "{{ groups.activemq | first }}"
      when: groups.activemq | default([]) | length > 0

    - name: Check search connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.search | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.search[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.search.http }}"
        delegate_target: "{{ groups.search | first }}"
      when: groups.search | default([]) | length > 0

    - name: Check sync connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.syncservice | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.syncservice[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.sync.http }}"
        delegate_target: "{{ groups.syncservice | first }}"
      when:
        - groups.syncservice | default([]) | length > 0
        - acs.edition == "Enterprise"

    - name: Check sfs connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.transformers | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.transformers[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.sfs.http }}"
        delegate_target: "{{ groups.transformers | first }}"
      when: acs.edition == "Enterprise"

    - name: Check trouter connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.transformers | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.transformers[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.transformers.trouter }}"
        delegate_target: "{{ groups.transformers | first }}"
      when: acs.edition == "Enterprise"

    - name: Check tengine connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.transformers | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.transformers[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.transformers.tengine }}"
        delegate_target: "{{ groups.transformers | first }}"

- name: Run preliminary network checks for search hosts
  hosts: search
  become: true
  tasks:
    - name: Check repo connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.repository | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.repository[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.repository.http }}"
        delegate_target: "{{ groups.repository | first }}"

- name: Run preliminary network checks for transformers hosts
  hosts: transformers
  become: true
  tasks:
    - name: Check activemq connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.activemq | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.activemq[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.activemq[activemq_protocol] }}"
        delegate_target: "{{ groups.activemq | first }}"
      when: groups.activemq | default([]) | length > 0

- name: Run preliminary network checks for syncservice hosts
  hosts: syncservice
  become: true
  tasks:
    - name: Check db connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.database | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.database[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.postgres.sql }}"
        delegate_target: "{{ groups.database | first }}"
      when: repo_db_url == ""

    - name: Check repo connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.repository | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.repository[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.repository.http }}"
        delegate_target: "{{ groups.repository | first }}"

    - name: Check activemq connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.activemq | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.activemq[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.activemq[activemq_protocol] }}"
        delegate_target: "{{ groups.activemq | first }}"
      when: groups.activemq | default([]) | length > 0

- name: Run preliminary network checks for acc hosts
  hosts: acc
  become: true
  tasks:
    - name: Check repo connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.repository | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.repository[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.repository.http }}"
        delegate_target: "{{ groups.repository | first }}"

- name: Run preliminary network checks for adw hosts
  hosts: adw
  become: true
  tasks:
    - name: Check repo connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.repository | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.repository[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.repository.http }}"
        delegate_target: "{{ groups.repository | first }}"

- name: Run preliminary network checks for nginx hosts
  hosts: nginx
  become: true
  tasks:
    - name: Check repo connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.repository | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.repository[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.repository.http }}"
        delegate_target: "{{ groups.repository | first }}"

    - name: Check sync connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.syncservice | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.syncservice[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.sync.http }}"
        delegate_target: "{{ groups.syncservice | first }}"
      when:
        - groups.syncservice | default([]) | length > 0
        - acs.edition == "Enterprise"

    - name: Check acc connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.acc | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.acc[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.acc.http }}"
        delegate_target: "{{ groups.acc | first }}"
      when:
        - groups.acc | default([]) | length > 0
        - acs.edition == "Enterprise"

    - name: Check adw connection
      ansible.builtin.include_tasks: "check_port.yml"
      vars:
        checked_host: "{% if groups.adw | length == 0 %}127.0.0.1{% else %}{{ hostvars[groups.adw[0]].ansible_host | default('127.0.0.1') }}{% endif %}"
        checked_port: "{{ ports_cfg.adw.http }}"
        delegate_target: "{{ groups.adw | first }}"
      when:
        - groups.adw | default([]) | length > 0
        - acs.edition == "Enterprise"
