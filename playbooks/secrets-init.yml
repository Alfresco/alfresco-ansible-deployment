---
- name: Generate random secrets
  hosts: localhost
  gather_facts: no
  vars:
    base_folder: "{{ playbook_dir }}/.."
    secrets_file: "{{ base_folder }}/vars/secrets.yml"
  tasks:
    - name: Ensure empty secrets.yml is present
      ansible.builtin.file:
        path: "{{ secrets_file }}"
        state: touch
        modification_time: preserve
        access_time: preserve

    - name: Peek into secrets.yml to discover if is an encrypted ansible-vault file
      ansible.builtin.shell: head -1 {{ secrets_file }} | grep -q \$ANSIBLE_VAULT
      register: peek_encrypted_file_vault
      failed_when: "peek_encrypted_file_vault.rc not in [0, 1]"
      changed_when: no

    - name: Ensure secrets.yml is not already encrypted
      assert:
        that: peek_encrypted_file_vault.rc != 0
        quiet: yes
        msg: "Vault file can't be changed by this playbook once encrypted"

    - name: Handle secret variables generation
      block:
        - name: Preload secrets as localhost hostvars
          ansible.builtin.include_vars:
            file: ../vars/secrets.yml

        - name: Evaluate generate-secret script mode
          ansible.builtin.set_fact:
            gs_mode: "plaintext"
          when: vault_init | default('plaintext') == 'plaintext' or
            vault_init == 'encrypted_file'

        - name: Evaluate generate-secret script mode
          ansible.builtin.set_fact:
            gs_mode: "encrypt_string"
          when: vault_init | default('') == 'encrypted_variables'

        - name: Evaluate generate-secret script mode
          ansible.builtin.set_fact:
            gs_mode: "plugin"
          when: vault_init | default('') == 'plugin'

        - name: Populate secrets.yml with missing secrets
          ansible.builtin.shell: "{{ base_folder }}/scripts/generate-secret.sh -s {{ item }} -m {{ gs_mode }} >> {{ secrets_file }}"
          when: not lookup('vars', item, default=False)
          loop:
            - ca_signing_key_passphrase
            - certs_p12_passphrase
            - repo_db_password
            - sync_db_password
            - reposearch_shared_secret
            - activemq_password
            - elasticsearch_password

        - name: Initialize encrypted file if requested via vault_file_initialize
          ansible.builtin.command: ansible-vault encrypt {{ secrets_file }}
          when: vault_init | default('') == 'encrypted_file'

    - name: Load secrets as localhost hostvars
      ansible.builtin.include_vars:
        file: ../vars/secrets.yml
