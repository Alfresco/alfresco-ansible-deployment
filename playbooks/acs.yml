---
- name: Check if OS distribution is supported
  hosts: all:!external
  gather_facts: yes
  tasks:
  - name: import supported OS matrix
    ansible.builtin.include_vars:
      dir: ../group_vars
      files_matching: all.yml

  - name: compare host OS with supported matrix
    loop: "{{ lookup('ansible.builtin.dict', supported-os) }}"
    ansible.builtin.fail:
      ansible.builtin.debug:
        msg:
        - 'You are on not supported OS distribution'
    when: (ansible_facts['os_family'] not in supported-os.key and ansible_facts['distribution_major_version'] in supported-os.value) or
          (ansible_facts['os_family'] in supported-os.key and ansible_facts['distribution_major_version'] not in supported-os.value) or
          (ansible_facts['os_family]) not in supported-os.key

- name: Check required dependencies
  ansible.builtin.import_playbook: check-versions.yml

- name: Handle secrets
  ansible.builtin.import_playbook: secrets.yml

- hosts: all:!external
  gather_facts: no
  tasks:
    - name: Gather facts from all hosts
      ansible.builtin.setup:

- name: Database Role
  hosts: database
  gather_facts: no
  roles:
    - role: "../roles/postgres"
      when: repo_db_url == "" or sync_db_url == ""
  post_tasks:
    - name: make sure PostgreSQL is running
      service:
        name: "{{ postgresql_service }}"
        state: started
  tags:
    - database

- name: Activemq Role
  hosts: activemq
  gather_facts: no
  roles:
    - role: "../roles/activemq"
      when: not groups.external_activemq | default([])
  tags:
    - activemq

- name: Transformers Role
  hosts: transformers
  gather_facts: no
  roles:
    - role: "../roles/transformers"
  post_tasks:
    - name: update installation status file with Transformers
      become: yes
      vars:
        transform_components:
          transform: "{{ transform }}"
      ansible.builtin.blockinfile:
        block: "{{ transform_components | to_nice_yaml(indent=2) }}"
        create: yes
        path: "{{ ansible_installation_status_file }}"
        marker_begin: TRANSFORM_BEGIN
        marker_end: TRANSFORM_END
  tags:
    - transformers

- name: Alfresco Search Role
  hosts: search
  gather_facts: no
  roles:
    - role: "../roles/search"
  post_tasks:
    - name: make sure Solr is running
      become: yes
      service:
        name: alfresco-search
        state: started
    - name: update installation status file with  Search
      become: yes
      vars:
        search_components:
          search: "{{ search }}"
      ansible.builtin.blockinfile:
        block: "{{ search_components | to_nice_yaml(indent=2) }}"
        create: yes
        path: "{{ ansible_installation_status_file }}"
        marker_begin: SEARCH_BEGIN
        marker_end: SEARCH_END
  tags:
    - search

- name: Alfresco Repository Role
  hosts: repository
  gather_facts: no
  roles:
    - role: "../roles/repository"
  post_tasks:
    - name: update installation status file with ACS
      become: yes
      vars:
        acs_components:
          acs: "{{ acs }}"
          amps: "{{ amps }}"
          api_explorer: "{{ api_explorer }}"
      ansible.builtin.blockinfile:
        block: "{{ acs_components | to_nice_yaml(indent=2) }}"
        create: yes
        path: "{{ ansible_installation_status_file }}"
        marker_begin: ACS_BEGIN
        marker_end: ACS_END
  tags:
    - repository

- name: T-Router Role
  hosts: transformers
  gather_facts: no
  roles:
    - role: "../roles/trouter"
      when: acs.edition == "Enterprise"
  post_tasks:
    - name: update installation status file with Trouter
      become: yes
      vars:
        trouter_components:
          trouter: "{{ trouter }}"
      ansible.builtin.blockinfile:
        block: "{{ trouter_components | to_nice_yaml(indent=2) }}"
        create: yes
        path: "{{ ansible_installation_status_file }}"
        marker_begin: TROUTER_BEGIN
        marker_end: TROUTER_END
  tags:
    - trouter

- name: Shared File Store Role
  hosts: transformers
  gather_facts: no
  roles:
    - role: "../roles/sfs"
      when: acs.edition == "Enterprise"
  post_tasks:
    - name: update installation status file with SFS
      become: yes
      vars:
        sfs_components:
          sfs: "{{ sfs }}"
      ansible.builtin.blockinfile:
        block: "{{ sfs_components | to_nice_yaml(indent=2) }}"
        create: yes
        path: "{{ ansible_installation_status_file }}"
        marker_begin: SFS_BEGIN
        marker_end: SFS_END
  tags:
    - sfs

- name: Alfresco Digital Workspace Role
  hosts: adw
  gather_facts: no
  roles:
    - role: "../roles/adw"
      when: acs.edition == "Enterprise"
  post_tasks:
    - name: update installation status file with ADW
      become: yes
      vars:
        adw_components:
          adw: "{{ adw }}"
      ansible.builtin.blockinfile:
        block: "{{ adw_components | to_nice_yaml(indent=2) }}"
        create: yes
        path: "{{ ansible_installation_status_file }}"
        marker_begin: ADW_BEGIN
        marker_end: ADW_END
  tags:
    - adw

- name: Nginx Role
  hosts: nginx
  gather_facts: no
  roles:
    - role: "../roles/nginx"
  post_tasks:
    - name: make sure NGINX is running
      become: yes
      service:
        name: nginx
        state: started
  tags:
    - nginx

- name: Sync Service Role
  hosts: syncservice
  gather_facts: no
  roles:
    - role: "../roles/sync"
      when: acs.edition == "Enterprise"
  post_tasks:
    - name: update installation status file with Sync
      become: yes
      vars:
        sync_components:
          sync: "{{ sync }}"
      ansible.builtin.blockinfile:
        block: "{{ sync_components | to_nice_yaml(indent=2) }}"
        create: yes
        path: "{{ ansible_installation_status_file }}"
        marker_begin: SYNC_BEGIN
        marker_end: SYNC_END
  tags:
    - sync
