name: "docker integration"

on:
  workflow_call:
    inputs:
      scenario:
        type: string
        description: molecule scenario
        required: false
        default: "false"
      os_distribution:
        type: string
        description: OS image to use for the container
        required: false
        default: rockylinux:9
      galaxy_cache:
        type: string
        description: an identifier for the Ansible galaxy cache (e.g. calling workflow name)
        required: false
        default: ansible-galaxy
      dtas_version:
        type: string
        description: git ref to use when cloning DTAS repo
        required: false
        default: master
    secrets:
      nexus_username:
        required: false
      nexus_password:
        required: false
      dtas_token:
        required: false

env:
  DTAS_VERSION: ${{ inputs.dtas_version }}
  BUILD_NUMBER: ${{ github.run_id }}
  PY_COLORS: 1
  PYTHONUNBUFFERED: 1

jobs:
  docker_integration:
    name: Test ${{ inputs.scenario }} scenario on ${{ inputs.os_distribution }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # avoid auth conflict when cloning DTAS during verify step
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version-file: '.python-version'
          cache: pipenv

      - name: Install python packages
        uses: Alfresco/alfresco-build-tools/.github/actions/pipenv@v3.4.0
        with:
          python-version: ${{ steps.setup-python.outputs.python-version }}

      - name: Install and cache ansible galaxy dependencies
        uses: ./.github/actions/galaxy
        with:
          cache-name: ${{ inputs.galaxy_cache }}

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace

      - name: Run tests
        env:
          MOLECULE_ROLE_IMAGE: ${{ inputs.os_distribution }}
          NEXUS_USERNAME: ${{ secrets.nexus_username }}
          NEXUS_PASSWORD: ${{ secrets.nexus_password }}
          CLONE_GITHUB_TOKEN: ${{ secrets.dtas_token }}
        run: pipenv run molecule test -s ${{ inputs.scenario }}
