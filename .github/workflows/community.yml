name: "community"
on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"
  push:
    branches: [master]
    paths-ignore:
      - "docs/**"
      - "*.md"
jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        molecule_distro:
          - image: centos:7
          - image: ubuntu:20.04
          - image: rockylinux:8
        role:
          - name: activemq
          - name: common
          - name: elasticsearch
          - name: java
          - name: nginx
          - name: postgres
          - name: search
          - name: tomcat
          - name: transformers
        exclude: # saves some build time building common roles that get tested anyway
          - molecule_distro:
              image: rockylinux:8
            role:
              name: common
          - molecule_distro:
              image: rockylinux:8
            role:
              name: java
          - molecule_distro:
              image: rockylinux:8
            role:
              name: nginx
          - molecule_distro:
              image: rockylinux:8
            role:
              name: postgres
          - molecule_distro:
              image: rockylinux:8
            role:
              name: tomcat
    env:
      PY_COLORS: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'

      - name: Install python packages
        uses: ./.github/actions/pipenv

      - name: Install and cache ansible galaxy dependencies
        uses: ./.github/actions/galaxy
        with:
          cache-version: 2

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace

      - name: Run tests
        env:
          MOLECULE_ROLE_IMAGE: ${{ matrix.molecule_distro.image }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_wait_seconds: 10
          command: cd roles/${{ matrix.role.name }} && pipenv run molecule test
