---
os: linux
dist: xenial
language: python
python:
  - "3.8.2"
cache: pip

services:
  - docker

before_install:
  - pip install ansible molecule ansible-lint PyHamcrest pylint testinfra 

env:
  - MOLECULE_NO_LOG=false

install: pip install 'molecule[docker]'

stages:
  - name: Linters
  - name: Verification

jobs:
  include:
    - stage: Linters
      name: "ansible-lint"
      install: pip install --upgrade ansible-lint
      script:
        - ansible-lint -v playbooks/acs.yml
    - name: "pylint"
      install: pip install --upgrade pylint
      script:
        - find . -name "*.py" ! -name __init__.py | xargs pylint
    - name: "yamllint"
      install: pip install --upgrade yamllint
      script:
        - yamllint .
    - stage: Verification
      name: Search Role Verification
      script:
        - cd roles/search/ && molecule test     
    - stage: Verification
      name: Common Role Verification
      script:
        - cd roles/common/ && molecule test
    - stage: Verification
      name: Java Role Verification
      script:
        - cd roles/java/ && molecule test
    - stage: Verification
      name: Tomcat Role Verification
      script:
        - cd roles/tomcat/ && molecule test
    - stage: Verification
      name: ActiveMQ Role Verification
      script:
        - cd roles/activemq/ && molecule test
    - stage: Verification
      name: Repository Role Verification
      script:
        - cd roles/repository/ && molecule test
    - stage: Verification
      name: ADW Role Verification
      script:
        - cd roles/adw/ && molecule test
    - stage: Verification
      name: Nginx Role Verification
      script:
        - cd roles/nginx/ && molecule test
    - stage: Verification
      name: Integration checks
      env:
        - COMMON_COMMANDS="source ~/.bash_profile;export NEXUS_USERNAME=$NEXUS_USERNAME; export NEXUS_PASSWORD=\"$NEXUS_PASSWORD\"; export MOLECULE_NO_LOG=false;export EC2_REGION=us-east-1;export TRAVIS_BRANCH=$TRAVIS_BRANCH;export TRAVIS_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER;export MOLECULE_EPHEMERAL_DIRECTORY=/opt/build-alfresco-ansible-deployment/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir;cd /opt/build-alfresco-ansible-deployment/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment"
      before_install:
        - openssl aes-256-cbc -K $encrypted_6c8b9ee48a27_key -iv $encrypted_6c8b9ee48a27_iv -in dbp-ansible.pem.enc -out /tmp/dbp-ansible -d
        - eval "$(ssh-agent -s)"
        - chmod 600 /tmp/dbp-ansible
        - ssh-add /tmp/dbp-ansible
      script:
        - ssh-keyscan $control_machine_ip >> ~/.ssh/known_hosts
        - ssh ec2-user@$control_machine_ip "mkdir -p /opt/build-alfresco-ansible-deployment/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER"
        - rsync -r --delete-after --quiet $TRAVIS_BUILD_DIR ec2-user@$control_machine_ip:/opt/build-alfresco-ansible-deployment/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER
        - ssh ec2-user@$control_machine_ip "source ~/.bash_profile;pip install --upgrade awscli 'molecule-ec2' ansible molecule ansible-lint PyHamcrest pylint testinfra;"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule create"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule converge"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule verify"
        - if [[ "$TRAVIS_COMMIT_MESSAGE" != *"[keep env]"* ]]; then ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy"; fi
