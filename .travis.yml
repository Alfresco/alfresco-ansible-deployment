---
os: linux
dist: xenial
language: python
python:
  - "3.9.0"

services:
  - docker

branches:
  only:
    - master
    - contribs
    - /feature.*/
    - /fix.*/
    - /OPSEXP-.*/

before_install:
  - travis_retry pip install ansible==${ANSIBLE_VERSION}
  - travis_retry ansible-galaxy collection install community.docker amazon.aws community.crypto

env:
  global:
    - MOLECULE_NO_LOG=false
    - ANSIBLE_VERSION="2.9.21"
    - AWS_REGION=us-east-1
    - DTAS_VERSION=OPSEXP-1208-handle-google-docs-url-community

stages:
  - name: Linters
  - name: Verification
  - name: Release Stage
    if: branch = master AND commit_message =~ /\[release\]/

jobs:
  include:
    - stage: Linters
      name: "ansible-lint"
      script:
        - ansible-lint -v playbooks/acs.yml
      after_script: exit 0
    - name: "pylint"
      script:
        - find . -name "*.py" ! -name __init__.py | xargs pylint
      after_script: exit 0
    - name: "yamllint"
      script:
        - yamllint .
      after_script: exit 0
    - name: Check components version table
      script:
        - python3 scripts/generate-comp-ver-table.py
        - git_status_out=$(git status)
        - if [[ "$git_status_out" == *"docs/README.md"* ]]; then echo "Error- Components version was not changed. Download pre-commit tool";exit 1; fi
      after_script: exit 0

    - stage: Verification
      name: Molecule ACS 6.2.2 on Centos 7
      env: MOLECULE_CONFIG=molecule-centos7.yml

    - stage: Verification
      name: Molecule ACS 7.1.0 on RHEL8
      env: MOLECULE_CONFIG=molecule-rhel8.yml

    - stage: Verification
      name: Molecule ACS 7.1.0 on Ubuntu 20.04
      env: MOLECULE_CONFIG=molecule-ubuntu2004.yml

    - stage: Verification
      name: Molecule ACS Community on RHEL8
      env: MOLECULE_CONFIG=molecule-rhel8-community.yml

script:
  - molecule -e $MOLECULE_CONFIG converge || exit 1
  - molecule -e $MOLECULE_CONFIG verify
after_script:
  - molecule -e $MOLECULE_CONFIG destroy
