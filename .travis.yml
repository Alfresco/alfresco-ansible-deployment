---
os: linux
dist: xenial
language: python
python:
  - "3.9.0"

services:
  - docker

before_install:
  - pip install ansible==2.9.13 molecule==3.0.8 ansible-lint PyHamcrest pylint testinfra

env:
  - MOLECULE_NO_LOG=false

install: pip install 'molecule[docker]'

stages:
  - name: Linters
  - name: Unit

jobs:
  include:
    - stage: Linters
      name: "ansible-lint"
      install: pip install --upgrade ansible-lint
      script:
        - ansible-lint -v playbooks/acs.yml
    - name: "pylint"
      install: pip install --upgrade pylint
      script:
        - find . -name "*.py" ! -name __init__.py | xargs pylint
    - name: "yamllint"
      install: pip install --upgrade yamllint
      script:
        - yamllint .
    - stage: Unit
      name: Search Role Verification
      script:
        - molecule --version
        - cd roles/search/
        - molecule converge
        - sleep 1m
        - molecule verify
        - molecule destroy   
    - stage: Unit
      name: Common Role Verification
      script:
        - cd roles/common/ && molecule test
    - stage: Unit
      name: Java Role Verification
      script:
        - cd roles/java/ && molecule test
    - stage: Unit
      name: Tomcat Role Verification
      script:
        - cd roles/tomcat/ && molecule test
    - stage: Unit
      name: ActiveMQ Role Verification
      script:
        - cd roles/activemq/ && molecule test
    - stage: Unit
      name: Repository Role Verification
      script:
        - cd roles/repository/ 
        - molecule converge
        - sleep 5m
        - travis_wait 30 molecule verify
        - molecule destroy
    - stage: Unit
      name: ADW Role Verification
      script:
        - cd roles/adw/ && molecule test
    - stage: Unit
      name: Nginx Role Verification
      script:
        - cd roles/nginx/ && molecule test
    - stage: Unit
      name: Transform AIO unit tests
      script:
        - cd roles/transformers
        - molecule converge
        - sleep 1m
        - molecule verify
        - molecule destroy
    - stage: Unit
      name: Integration checks
      env:
        - COMMON_COMMANDS="source ~/.bash_profile;export NEXUS_USERNAME=$NEXUS_USERNAME; export NEXUS_PASSWORD=\"$NEXUS_PASSWORD\"; export MOLECULE_NO_LOG=false;export EC2_REGION=us-east-1;export TRAVIS_BRANCH=$TRAVIS_BRANCH;export TRAVIS_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER;export MOLECULE_EPHEMERAL_DIRECTORY=/opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir; export ANSIBLE_CONFIG=/opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir/ansible.cfg; cd /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment"
      before_install:
        - openssl aes-256-cbc -K $encrypted_6c8b9ee48a27_key -iv $encrypted_6c8b9ee48a27_iv -in dbp-ansible.pem.enc -out /tmp/dbp-ansible -d
        - eval "$(ssh-agent -s)"
        - chmod 600 /tmp/dbp-ansible
        - ssh-add /tmp/dbp-ansible
        - git clone --depth 1 https://$GITHUB_TOKEN@github.com/Alfresco/alfresco-deployment-test-automation-scripts.git dtas
        - sed -i 's/localhost/localhost\n          ansible_ssh_common_args:-o UserKnownHostsFile=\/dev\/null -o ControlMaster=auto -o ControlPersist=60s -o ForwardX11=no -o LogLevel=ERROR -o IdentitiesOnly=yes -o StrictHostKeyChecking=no/g' inventory/inventory.yml
        - sed -i 's/-o UserKnownHostsFile/ -o UserKnownHostsFile/g' inventory/inventory.yml
        - sed -i "s/localhost/localhost\n          ansible_private_key_file:\/opt\/buildacs\/$TRAVIS_BRANCH\/$TRAVIS_BUILD_NUMBER\/alfresco-ansible-deployment\/molecule_temp_dir\/ssh_key/g" inventory/inventory.yml
        - sed -i 's/\/opt\/buildacs/ \/opt\/buildacs/g' inventory/inventory.yml
        - sed -i 's/localhost/localhost\n          ansible_user:centos/g' inventory/inventory.yml
        - sed -i 's/centos/ centos/g' inventory/inventory.yml
      script:
        - ssh-keyscan $control_machine_ip >> ~/.ssh/known_hosts
        - ssh ec2-user@$control_machine_ip "mkdir -p /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir/"
        - rsync -r --delete-after --quiet $TRAVIS_BUILD_DIR ec2-user@$control_machine_ip:/opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER
        - ssh ec2-user@$control_machine_ip "source ~/.bash_profile;pip install --upgrade --use-feature=2020-resolver awscli 'molecule-ec2==0.2';"
        - ssh ec2-user@$control_machine_ip "mkdir -p /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir/"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy -s ec2"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule create -s ec2"
        - export TESTHOST=$(ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;cat molecule_temp_dir/instance_config.yml | yq .[].address -r")
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS; sed -i 's/localhost/$TESTHOST/g' /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/inventory/inventory.yml"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS; ansible-playbook playbooks/acs.yml -i /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/inventory/inventory.yml"
        - echo "wait for repo to be up" && sleep 5m
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS; cd dtas; pytest --verbose --host http://$TESTHOST --user admin --password admin"
        - if [[ "$TRAVIS_COMMIT_MESSAGE" != *"[keep env]"* ]]; then ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy -s ec2"; fi
    - stage: Unit
      name: Multi Machine Integration checks
      env:
        - COMMON_COMMANDS="source ~/.bash_profile;export NEXUS_USERNAME=$NEXUS_USERNAME; export NEXUS_PASSWORD=\"$NEXUS_PASSWORD\"; export MOLECULE_NO_LOG=false;export EC2_REGION=us-east-1;export TRAVIS_BRANCH=$TRAVIS_BRANCH;export TRAVIS_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER;export MOLECULE_EPHEMERAL_DIRECTORY=/opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir_m; export ANSIBLE_CONFIG=/opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir_m/ansible.cfg; cd /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment"
      before_install:
        - openssl aes-256-cbc -K $encrypted_6c8b9ee48a27_key -iv $encrypted_6c8b9ee48a27_iv -in dbp-ansible.pem.enc -out /tmp/dbp-ansible -d
        - eval "$(ssh-agent -s)"
        - chmod 600 /tmp/dbp-ansible
        - ssh-add /tmp/dbp-ansible
        - git clone --depth 1 https://$GITHUB_TOKEN@github.com/Alfresco/alfresco-deployment-test-automation-scripts.git dtas
      script:
        - ssh-keyscan $control_machine_ip >> ~/.ssh/known_hosts
        - ssh ec2-user@$control_machine_ip "mkdir -p /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/"
        - rsync -r --delete-after --quiet $TRAVIS_BUILD_DIR ec2-user@$control_machine_ip:/opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER
        - ssh ec2-user@$control_machine_ip "source ~/.bash_profile;pip install --upgrade --use-feature=2020-resolver awscli 'molecule-ec2==0.2';"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy -s ec2multi"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule create -s ec2multi"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;python molecule/ec2multi/dynamic_inventory.py"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;cp -r /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/inventory/group_vars /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/molecule_temp_dir_m/"
        - export TESTHOST=$(ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;cat molecule_temp_dir_m/new_inventory.yml | yq .all.children.webservers.hosts.webservers_1.ansible_host -r")
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;ansible-playbook playbooks/acs.yml -i /opt/buildacs/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/alfresco-ansible-deployment/inventory/new_inventory.yml"
        - echo "wait for repo to be up" && sleep 5m
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS; cd dtas; pytest --verbose --host http://$TESTHOST --user admin --password admin"
        - if [[ "$TRAVIS_COMMIT_MESSAGE" != *"[keep env]"* ]]; then ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy -s ec2multi"; fi
