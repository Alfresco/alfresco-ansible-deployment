---
os: linux
dist: xenial
language: python
python:
  - "3.8.2"
cache: pip

services:
  - docker

before_install:
  - pip install ansible molecule ansible-lint PyHamcrest pylint testinfra

stages:
  - name: Linters
  - name: Unit tests

jobs:
  include:
    - stage: Linters
      name: "ansible-lint"
      install: pip install --upgrade ansible-lint
      script:
        - ansible-lint -v playbooks/acs.yml
    - name: "pylint"
      install: pip install --upgrade pylint
      script:
        - find . -name "*.py" ! -name __init__.py | xargs pylint
    - name: "yamllint"
      install: pip install --upgrade yamllint
      script:
        - yamllint .
    - stage: Deploy Integration Env
      env:
        - COMMON_COMMANDS="source ~/.bash_profile;export NEXUS_USERNAME=$NEXUS_USERNAME; export NEXUS_PASSWORD=$NEXUS_PASSWORD; export MOLECULE_NO_LOG=false;export EC2_REGION=us-east-1;export TRAVIS_BRANCH=$TRAVIS_BRANCH;export TRAVIS_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER;export MOLECULE_EPHEMERAL_DIRECTORY=/opt/build/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/dbp-ansible/molecule_temp_dir;cd /opt/build/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/dbp-ansible"
      script:
        - ssh-keyscan $control_machine_ip >> ~/.ssh/known_hosts
        - ssh ec2-user@$control_machine_ip "mkdir -p /opt/build/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER"
        - rsync -r --delete-after --quiet $TRAVIS_BUILD_DIR ec2-user@$control_machine_ip:/opt/build/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER
        - ssh ec2-user@$control_machine_ip "source ~/.bash_profile;pip install --upgrade awscli 'molecule-ec2' ansible molecule ansible-lint PyHamcrest pylint testinfra;"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy -s ec2"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule create -s ec2"
        - ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule converge -s ec2"
      after_failure: |
        if [[ "$TRAVIS_COMMIT_MESSAGE" != *"[keep env]"* ]]; then
          ssh ec2-user@$control_machine_ip "$COMMON_COMMANDS;molecule destroy -s ec2"
        fi
    - stage: Unit tests
      name: Java Role unit tests
      env:
        - MOLECULE_NO_LOG=false
      install: pip install 'molecule[docker]'
      script:
        - cd roles/java/ && molecule test